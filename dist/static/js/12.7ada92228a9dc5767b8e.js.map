{"version":3,"sources":["webpack:///src/components/heatmap.vue","webpack:///./src/components/heatmap.vue?5de3","webpack:///./src/components/heatmap.vue"],"names":["__webpack_exports__","data","arr","value","sortValue","idShow","visible","height","components","leftMenu","__WEBPACK_IMPORTED_MODULE_0__leftMenu_vue__","watch","$route","[object Object]","this","$store","state","heatmapJson","heatmap_json_string","JSON","parse","initchart","methods","stages","json","genes","window","boxplot","__WEBPACK_IMPORTED_MODULE_2_highcharts_highstock___default","a","Chart","chart","renderTo","type","credits","enabled","title","text","legend","exporting","xAxis","categories","yAxis","plotOptions","color","fillColor","lineWidth","medianColor","medianWidth","stemColor","stemDashStyle","stemWidth","whiskerColor","whiskerLength","whiskerWidth","series","name","target_element","$","offset","min_y","top","microarrays_element","left","dendrogram","InCHlib","target","metadata","column_metadata","min_row_height","max_column_width","max_height","heatmap_colors","metadata_colors","column_dendrogram","max_percentile","min_percentile","independent_columns","current","current_objects","current_columns","draw_boxplot","object_ids","column_ids","y","header","length","j","push","hide","class2values","m","i","values","row_id","key","max_y","footer_height","features","css","objects2leaves","nodes","setTitle","objects","remove","seriesData","idx","get_boxplot_parameters","addSeries","show","array","min","max","median","lower_q","upper_q","sort","b","array_length","median_index","_hack_round","quarter","events","row_onclick","evt","pageY","highlight_rows","unhighlight_cluster","dendrogram_node_onclick","node_id","column_dendrogram_node_highlight","column_dendrogram_node_unhighlight","on_zoom","empty_space_onclick","read_data","draw","$router","components_heatmap","render","_vm","_h","$createElement","_c","_self","staticStyle","float","width","margin-top","_v","staticClass","margin","attrs","separator","to","path","_s","projectName","_case","_control","_m","span","id","staticRenderFns","href","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","heatmap"],"mappings":"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","file":"static/js/12.7ada92228a9dc5767b8e.js","sourcesContent":["<template>\n  <div class=\"\">\n    <leftMenu style=\"float:left;width:300px;margin-top:10px;\"></leftMenu>\n\n    <div class=\"content\">\n      <el-breadcrumb separator=\"/\" style=\"margin:5px 0 50px 0\">\n        <el-breadcrumb-item :to=\"{ path: 'report' }\">项目 {{$store.state.projectName}}</el-breadcrumb-item>\n        <!-- <el-breadcrumb-item :to=\"{ path: 'report_deg' }\">差异表达基因</el-breadcrumb-item>\n        <el-breadcrumb-item :to=\"{ path: 'heatmap_input' }\">绘制基因热图</el-breadcrumb-item> -->\n        <el-breadcrumb-item>基因热图</el-breadcrumb-item>\n      </el-breadcrumb>\n\n      <div class=\"container\">\n        <h2>基因差异表达热图 {{$store.state._case}} vs {{$store.state._control}} </h2>\n\n        <p>差异表达基因热图，可以通过颜色深浅来直观显示不同实验条件下基因表达的差异，并且可以较直观的显示出不同实验条件下调基因调控模式（表达谱）的差异。默认的配色方案为红色代表较低的表达水平，绿色代表较高的表达水平，黑色代表中间表达水平。用户可以点击左上角的色条更改配色方案。HeatMap 左侧的树状结构表示基因聚类的结果，表达趋势越接近的基因，在树状结构图中的位置也更接近。HeatMap 上方的树状结构图表示样本聚类的结果，基因表达模式更接近的样本，在数据结构图中的位置更接近。HeatMap 的输入数据为样本间差异表达基因列表中前 100 个基因的 TPM 值，基因距离和样本距离的计算采用欧式距离，基因和样本间的 linkage 计算方法为 ward，使用工具为 Inchlib，参考文献:</p>\n        <p>Škuta, C., Bartůněk, P., Svozil, D. InCHlib – interactive cluster heatmap for web applications. Journal of Cheminformatics 2014, 6 (44), DOI: 10.1186/s13321-014-0044-4 [<a href=\"http://www.jcheminf.com/content/6/1/44\" target=\"_blank\">全文链接</a>]]</p>\n\n        <el-row>\n          <el-col :span=\"16\">\n            <div id=\"microarrays_dendrogram\" class=\"\"></div>\n          </el-col>\n          <el-col :span=\"8\">\n            <div id=\"microarrays\" class=\"margin-top-200\">\n                <div id=\"boxplot\"></div>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport leftMenu from './leftMenu.vue'\nimport * as d3 from 'd3'\n\nimport Highcharts from 'highcharts/highstock';\nexport default {\n  data () {\n    return {\n      arr: [],\n      value: [],\n      sortValue: [],\n      idShow: false,\n      visible: 'hidden',\n      height: 5,\n    }\n  },\n  components: {\n    leftMenu\n  },\n  watch: {\n    '$route': 'routerChange'\n  },\n  created () {\n    this.$store.state.heatmapJson.heatmap_json_string = JSON.parse(this.$store.state.heatmapJson.heatmap_json_string)\n  },\n  mounted () {\n    this.initchart()\n  },\n  methods: {\n    routerChange () {\n      this.$store.state.heatmapJson.heatmap_json_string = JSON.parse(this.$store.state.heatmapJson.heatmap_json_string)\n      this.initchart()\n    },\n    initchart () {\n      let stages = this.$store.state.heatmapJson.stages\n      let genes = this.$store.state.heatmapJson.genes\n      let json = this.$store.state.heatmapJson.heatmap_json_string\n      window.boxplot = new Highcharts.Chart({\n                  chart: {\n                      renderTo: \"boxplot\",\n                      type: 'boxplot',\n                      height: 400,\n                  },\n                  credits: {\n                    enabled: false //不显示LOGO\n                  },\n                  title: {\n                      text: \"当前基因表达量\"\n                  },\n\n                  legend: {\n                      enabled: false\n                  },\n\n                  exporting:{\n                      enabled: false\n                  },\n\n                  xAxis: {\n                      categories: stages,\n                      title: {\n                          text: 'Sample Types'\n                      }\n                  },\n\n                  yAxis: {\n                      title: {\n                          text: 'Read Counts'\n                      }\n                  },\n\n                  plotOptions: {\n                      boxplot: {\n                          color: \"#000000\",\n                              fillColor: '#F0F0E0',\n                              lineWidth: 2,\n                              medianColor: '#0C5DA5',\n                              medianWidth: 3,\n                              stemColor: '#A63400',\n                              stemDashStyle: 'dot',\n                              stemWidth: 1,\n                              whiskerColor: '#3D9200',\n                              whiskerLength: '20%',\n                              whiskerWidth: 3\n                      }\n                  },\n\n                  series: [{\n                      name: 'Read Counts',\n                      data: [\n                      ]\n                  }\n                  ]\n              });\n\n              var target_element = $(\"#microarrays_dendrogram\");\n              var offset = target_element.offset();\n              var min_y = offset.top + 100;\n              var x_pos = offset.left;\n              var microarrays_element = $(\"#microarrays\");\n              //microarrays_element.css({\"left\": x_pos + target_element.width()-50, \"top\": min_y, \"z-index\": 100});\n\n              window.dendrogram = new InCHlib({ //instantiate InCHlib\n                      target: \"microarrays_dendrogram\", //ID of a target HTML element\n                      metadata: true, //turn on the metadata\n                      column_metadata: true, //turn on the column metadata\n                      min_row_height:5,\n                      max_column_width:50,\n                      max_height: 5, //set maximum height of visualization in pixels\n                      heatmap_colors: \"RdBkGr\", //set color scale for clustered data\n                      metadata_colors: \"RdLrBu\", //set color scale for metadata\n                      column_dendrogram: true,\n                      max_percentile: 90,\n                      // middle_percentile: 50,\n                      min_percentile: 10,\n                      independent_columns: false\n              });\n\n              var current = null;\n              var current_objects = [];// dendrogram.data.nodes[0].objects;\n              var current_columns = [];\n\n              dendrogram.events.row_onclick = function(object_ids, evt){\n                  current = object_ids[0];\n                  current_objects = object_ids;\n                  draw_boxplot(current_objects, current_columns, evt.pageY);\n                  dendrogram.highlight_rows(current_objects);\n                  dendrogram.unhighlight_cluster();\n              };\n\n              dendrogram.events.dendrogram_node_onclick = function(object_ids, node_id, evt){\n                  current_objects = object_ids;\n                  draw_boxplot(current_objects, current_columns, evt.pageY);\n                  var i;\n                  for(i = 0; i<object_ids.length; i++){\n                      if(object_ids[i] == current){\n                          return;\n                      }\n                  }\n                  dendrogram.highlight_rows([]);\n              };\n\n              dendrogram.events.column_dendrogram_node_highlight = function(column_ids, node_id){\n                  draw_boxplot(current_objects, column_ids, 0);\n              };\n\n              dendrogram.events.column_dendrogram_node_unhighlight = function(){\n                  current_columns = [];\n                  draw_boxplot(current_objects, current_columns, 0);\n              };\n\n              dendrogram.events.on_zoom = function(node_id){\n                  microarrays_element.css({\"top\": min_y});\n              };\n\n              dendrogram.events.empty_space_onclick = function(){\n                  dendrogram.highlight_rows([]);\n                  //microarrays_element.hide();\n              };\n\n              dendrogram.read_data(json); //read input json file\n              dendrogram.draw(); //draw cluster heatmap\n              draw_boxplot(current_objects, current_columns, min_y);\n              dendrogram.highlight_rows(current_objects);\n\n              function draw_boxplot(object_ids, column_ids, y){\n                  current_columns = column_ids;\n                  var header = dendrogram.header;\n                  if(current_columns.length === 0){\n                      for(j = 0; j<header.length; j++){\n                          current_columns.push(j);\n                      }\n                  }\n\n                  microarrays_element.hide();\n                  var class2values = {};\n                  for (var m = 0; m < stages.length; ++ m) {\n                      class2values[stages[m]] = [];\n                  }\n\n                  var max_y = min_y + target_element.height() - dendrogram.footer_height;\n                  var i, j, values, row_id, key;\n                  //var header = dendrogram.header;\n                  var column_metadata = dendrogram.column_metadata.features[0];\n                  var boxplot_height = 400;\n\n                  y = (y + boxplot_height > max_y)?max_y - boxplot_height:y-100;\n                  y = (y < min_y)?min_y: y;\n\n                  microarrays_element.css({\"top\": y});\n\n                  for (i = 0; i < object_ids.length; i++) {\n                      row_id = dendrogram.objects2leaves[object_ids[i]];\n                      values = dendrogram.data.nodes[row_id].features;\n                      boxplot.setTitle({text: dendrogram.data.nodes[row_id].objects[0]});\n                      for (j = 0; j < current_columns.length; j++) {\n                          key = current_columns[j];\n                          class2values[column_metadata[key]].push(values[key]);\n                      }\n                  }\n\n                  if (object_ids.length > 1) {\n                      boxplot.setTitle({text: \"多个基因\"});\n                  }\n\n                  while(boxplot.series.length > 0){\n                      boxplot.series[0].remove(true);\n                  }\n\n                  var seriesData = [];\n                  for(var idx = 0; idx < stages.length; ++ idx) {\n                      if(class2values[stages[idx]] && class2values[stages[idx]].length) {\n                          seriesData.push(get_boxplot_parameters(class2values[stages[idx]]));\n                      } else {\n                          seriesData.push([0,0,0,0,0]);\n                      }\n                  }\n                  boxplot.addSeries({data:seriesData, name: \"Average Signal\"}, true);\n                  microarrays_element.show();\n              }\n\n              function get_boxplot_parameters(array){\n                  var min, max, median, lower_q, upper_q;\n                  array.sort(function(a,b){return a - b;});\n                  var array_length = array.length;\n                  min = array[0];\n                  max = array[array_length-1];\n                  var median_index = dendrogram._hack_round(array_length/2);\n                  var quarter = dendrogram._hack_round(array_length/4);\n                  median = array[median_index];\n                  lower_q = array[median_index-quarter];\n                  upper_q = array[median_index+quarter];\n                  if (array.length < 4) {\n                      upper_q = max;\n                  }\n                  var parameters = [min, lower_q, median, upper_q, max];\n                  return parameters;\n              }\n    },\n    backHeatmapInput () {\n      this.$router.push({'name': 'heatmap_input'})\n    }\n\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.content {\n  float:left;\n  width: 60%;\n  padding: 0 20px;\n  margin: 19px auto;\n}\n.margin-top-200 {\n  margin-top: 200px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/heatmap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('leftMenu',{staticStyle:{\"float\":\"left\",\"width\":\"300px\",\"margin-top\":\"10px\"}}),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('el-breadcrumb',{staticStyle:{\"margin\":\"5px 0 50px 0\"},attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: 'report' }}},[_vm._v(\"项目 \"+_vm._s(_vm.$store.state.projectName))]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"基因热图\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('h2',[_vm._v(\"基因差异表达热图 \"+_vm._s(_vm.$store.state._case)+\" vs \"+_vm._s(_vm.$store.state._control)+\" \")]),_vm._v(\" \"),_c('p',[_vm._v(\"差异表达基因热图，可以通过颜色深浅来直观显示不同实验条件下基因表达的差异，并且可以较直观的显示出不同实验条件下调基因调控模式（表达谱）的差异。默认的配色方案为红色代表较低的表达水平，绿色代表较高的表达水平，黑色代表中间表达水平。用户可以点击左上角的色条更改配色方案。HeatMap 左侧的树状结构表示基因聚类的结果，表达趋势越接近的基因，在树状结构图中的位置也更接近。HeatMap 上方的树状结构图表示样本聚类的结果，基因表达模式更接近的样本，在数据结构图中的位置更接近。HeatMap 的输入数据为样本间差异表达基因列表中前 100 个基因的 TPM 值，基因距离和样本距离的计算采用欧式距离，基因和样本间的 linkage 计算方法为 ward，使用工具为 Inchlib，参考文献:\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":16}},[_c('div',{attrs:{\"id\":\"microarrays_dendrogram\"}})]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"margin-top-200\",attrs:{\"id\":\"microarrays\"}},[_c('div',{attrs:{\"id\":\"boxplot\"}})])])],1)],1)],1)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Škuta, C., Bartůněk, P., Svozil, D. InCHlib – interactive cluster heatmap for web applications. Journal of Cheminformatics 2014, 6 (44), DOI: 10.1186/s13321-014-0044-4 [\"),_c('a',{attrs:{\"href\":\"http://www.jcheminf.com/content/6/1/44\",\"target\":\"_blank\"}},[_vm._v(\"全文链接\")]),_vm._v(\"]]\")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d7b06fa4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/heatmap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d7b06fa4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./heatmap.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d7b06fa4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./heatmap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d7b06fa4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/heatmap.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}