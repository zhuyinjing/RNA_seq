{"version":3,"sources":["webpack:///src/components/leftMenu.vue","webpack:///./src/components/leftMenu.vue?3c9a","webpack:///./src/components/leftMenu.vue","webpack:///./node_modules/d3/build/d3.js"],"names":["leftMenu","data","components","[object Object]","this","$route","path","$store","commit","methods","$router","push","name","_case","_control","index","query","formData","FormData","append","state","username","projectId","axios","post","then","res","message","components_leftMenu","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","padding","attrs","default-active","leftMenuIndex","on","click","report","_v","slot","report_fastqc","report_mappingqc","report_new_trans","report_expr_matrix","plotCluster","href","target","_l","info","experimentDesign","item","key","font-size","_s","$event","report_volcano_plot","report_deg","heatmap","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","exports","ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","array","n","m","s","i","j","isNaN","deviation","v","Math","sqrt","extent","c","Array","prototype","slice","map","constant","identity","sequence","start","stop","step","arguments","max","ceil","range","e10","e5","e2","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","sturges","values","LN2","threshold","p","h","merge","arrays","merged","min","transpose","matrix","row","slice$1","identity$1","top","bottom","epsilon","translateX","translateY","y","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","apply","domain","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","selectAll","tick","order","tickExit","exit","tickEnter","enter","attr","line","select","text","insert","transition","isFinite","getAttribute","parentNode","remove","filter","each","_","call","tickSize","noop","value","dispatch","t","Error","Dispatch","get","type","set","callback","concat","constructor","typename","types","T","trim","split","indexOf","hasOwnProperty","that","args","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","nextId","local$1","Local","toString","node","id","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","o","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","source","current","point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","none","querySelector","empty$1","selectorAll","querySelectorAll","sparse","update","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","keyPrefix","bindIndex","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending$1","window","defaultView","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","root","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","match","size","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","sort","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","style","priority","removeProperty","setProperty","getComputedStyle","getPropertyValue","property","classed","html","create","before","typenames","parseTypenames$1","touch","touches","identifier","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","selection$$1","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","constant$2","DragEvent","subject","active","dx","dy","defaultFilter$1","button","defaultContainer","defaultSubject","define","factory","extend","definition","Object","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","l","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","hclConvert","z","A","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","cosh","sinh","basis$1","basisClosed","constant$3","linear","hue","gamma","nogamma","exponential","interpolateRgb","rgbGamma","color$$1","rgb$$1","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","array$1","nb","na","interpolateValue","date","Date","setTime","reinterpolate","object","reA","reB","cssNode","cssRoot","cssView","svgNode","interpolateString","am","bm","bs","bi","lastIndex","q","one","zero","isArray","interpolateRound","degrees","identity$2","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","exp","interpolateZoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","duration","hsl$1","hue$$1","hsl$2","hslLong","hcl$1","hcl$2","hclLong","cubehelix$1","cubehelixGamma","cubehelix$$1","taskHead","taskTail","cubehelix$2","cubehelixLong","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","timeout$1","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","self","tween","ease","init","set$1","get$1","interrupt","tweenValue","_id","interpolate$$1","Selection$1","Transition","_name","newId","selection_prototype","quadInOut","cubicInOut","select$$1","children","inherit","id0","id1","on0","on1","sit","every","onFunction","attrTween","value00","value10","interpolate0","value0","value1","_value","styleTween","interpolate$$2","styleRemove$1","styleRemoveEnd","styleFunction$1","styleConstant$1","textFunction$1","textConstant$1","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinInOut","expInOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","root$1","constant$4","BrushEvent","nopropagation$1","noevent$1","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","input","output","xy","Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","defaultExtent","width","height","local$$1","__brush","brush$1","dim","touchending","listeners","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","n0","n1","e0","e1","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","shifting","shiftKey","point0","emit","beforestart","moved","ended","keyCode","move","point1","selection0","selection1","starting","pi$1","halfPi$1","tau$1","max$1","slice$2","constant$5","pi$2","tau$2","tauEpsilon","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","Map","map$1","has","clear","keys","entries","createObject","setObject","createMap","setMap","Set","proto","set$2","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","delimiterCode","charCodeAt","parseRows","eol","EOL","EOF","rows","I","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","forEach","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","constant$6","jiggle","random","tree","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","defaultX","defaultY","quadtree","Quadtree","addAll","undefined","leaf_copy","treeProto","vx","vy","cover","xz","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","nodeById","nodeId","x$1","y$1","prefixExponent","initialRadius","initialAngle","formatDecimal","toExponential","coefficient","exponent$1","formatRounded","formatTypes","","toPrecision","out","%","toFixed","toUpperCase","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","locale$1","identity$3","prefixes","formatLocale","locale","grouping","thousands","substring","reverse","currency","decimal","numerals","formatNumerals","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","add$1","temp","valueOf","bv","av","epsilon$2","pi$3","halfPi$2","quarterPi","tau$3","degrees$1","radians","cos$1","sin$1","haversin","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","geoStream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","ranges","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","delta","sign$$1","lambdai","antimeridian","angle","rangeCompare","rangeContains","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","constant$7","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","shift","result","clipLine","ax","ay","pointEqual","Intersection","points","other","entry","clipPolygon","segments","compareIntersection","startInside","interpolate","clip","segment","link$1","isSubject","clipMax","clipMin","clipExtent","visible","from","to","corner","comparePoint","ca","cb","polygon","ring","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","winding","polygonInside","cleanInside","lambda0$2","sinPhi0$1","cosPhi0$1","sum$1","polygonContains","sinPhi1","cosPhi1","absDelta","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","length$1","object$1","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","x00","y00","x0$1","y0$1","identity$4","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","area","areaPointFirst$1","areaPoint$1","x0$2","y0$2","boundsStream$1","bounds","x00$1","y00$1","x0$3","y0$3","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","_circle","pointVisible","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clipCircle","cr","smallRadius","notHemisphere","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","q1","code","c0","v00","point2","transformer","TransformStream","fitExtent","projection","fitSize","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","projectionMutator","projectAt","projectRotate","cache","cacheStream","theta","preclip","postclip","projectResample","projectTransform","recenter","center","clipAngle","conicProjection","parallels","conicEqualAreaRaw","sy0","forward","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanXReduce","maxYReduce","sum","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","Node$2","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","enclose","circles","encloseN","L","circle","l2","l0","l1","head","r2","r21","enclose2","r3","a2","a3","c3","d3","enclose3","encloses","tail","shuffle$1","dr","place","db","dc","intersects","distance1","distance2","Node$1","packEnclose","sj","sk","aa","ba","oa","ox","oy","pack","required","constantZero","constant$8","defaultRadius$1","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","keyPrefix$1","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","dice","squarify","resquarify","_squarify","cross$1","lexicographicOrder","computeUpperHullIndexes","indexes","slice$3","noabort","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","maybeNotify","queue","concurrency","defer","await","results","awaitAll","mu","sigma","irwinHall","request","url","mimeType","response","responseType","headers","xhr","XMLHttpRequest","user","password","respond","status","responseText","hasResponse","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","method","open","setRequestHeader","overrideMimeType","fixCallback","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","request$$1","responseOf","csv$1","tsv$1","array$2","map$3","slice$4","implicit","ordinal","unknown","band","ordinalRange","range$$1","paddingInner","paddingOuter","rescale","rangeRound","constant$9","number$1","unit","deinterpolateLinear","bimap","deinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","linearish","nice","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","raise$1","pow$1","t0$1","t1$1","newInterval","floori","offseti","field","millisecond","milliseconds","durationMinute$1","durationWeek$1","second","getUTCSeconds","seconds","minute","getMinutes","minutes","hour","getTimezoneOffset","getHours","hours","day","setHours","setDate","getDate","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","years","utcMinute","setUTCSeconds","getUTCMinutes","utcMinutes","utcHour","setUTCMinutes","getUTCHours","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","utcYear","setUTCFullYear","utcYears","localDate","H","M","utcDate","UTC","newYear","formatLocale$1","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","U","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","day$$1","utcFormat","utcParse","locale$2","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","defaultLocale$1","timeFormat","timeParse","formatIso","toISOString","parseIso","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","tickIntervals","tickInterval","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","ramp","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","max$2","min$1","sin$2","sqrt$2","epsilon$3","pi$4","halfPi$3","tau$4","asin$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","cornerTangents","rc","x11","y11","x10","y10","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","areaStart","areaEnd","curveLinear","x$3","y$3","x$$1","y$$1","defined","curve","buffer","defined0","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","curveRadialLinear","curveRadial","Radial","_curve","radial","radialLine","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","point$2","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","point$3","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","slice$5","none$1","series","none$2","stackValue","ascending$2","sums","sum$2","constant$11","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","after","grandpa","uncle","sibling","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2$2","ha","hc","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","epsilon$4","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v01","v11","v10","clipCells","polygons","triangles","_found","constant$12","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","identity$8","transform$1","__zoom","nopropagation$2","noevent$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","bisect","cross","ia","ib","ic","descending","histogram","tz","bin","bins","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","mean","median","numbers","pairs","permute","permutes","quantile","scan","xi","xj","shuffle","zip","axisTop","axisRight","axisBottom","axisLeft","brushX","brushY","brushSelection","chord","sortGroups","sortSubgroups","sortChords","groupSums","groupIndex","subgroupIndex","chords","di","dj","subindex","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","nest","sortValues","rollup","sortKeys","createResult","setResult","valuesByKey","sortKey","drag","mousemoving","container","gestures","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","touches$$1","sublisteners","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","force","sx","sy","forceCollide","radii","strength","iterations","yi","ri","ri2","prepare","quad","rj","forceLink","strengths","distances","bias","link","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","initializeNodes","initializeForce","closest","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","feature","deltaMax","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","sy1","kx0","ky0","kx1","ky1","geoLength","geoPath","projectionStream","contextStream","measure","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","reflectX","reflectY","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","cluster","separation","nodeSize","previousNode","reduce","meanX","maxY","leafLeft","leafRight","packSiblings","partition","positionNode","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","treemapBinary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","quantize","interpolator","samples","polygonArea","polygonCentroid","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","inside","polygonLength","perimeter","randomUniform","randomNormal","randomLogNormal","randomBates","randomIrwinHall","randomExponential","scaleBand","scalePoint","pointish","scaleIdentity","identity$6","scaleLinear","linear$2","scaleLog","log$1","logs","pows","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$$1","invertExtent","quantiles","scaleQuantize","quantize$1","scaleThreshold","threshold$1","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","sequential","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","kc","lc","pie","arcs","pa","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stack","oz","kz","sz","sij","ki","si","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","total","voronoi","zoom","touchstarting","k0","k1","touchDelay","wheelDelay","wheeled","dblclicked","constrain","transition$$1","Gesture","deltaY","deltaMode","wheel","touch0","touch1","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","zoomTransform","zoomIdentity","defineProperty"],"mappings":"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","file":"static/js/0.aab1e42557b578fe9969.js","sourcesContent":["<template>\n  <div>\n    <el-menu style=\"padding: 0 10px;\" :default-active=\"$store.state.leftMenuIndex\" class=\"el-menu-vertical-demo\">\n        <el-menu-item index=\"0-0\" @click=\"report\">报告首页</el-menu-item>\n        <el-menu-item-group>\n          <span slot=\"\">质量控制</span>\n          <el-menu-item index=\"1-0\" @click=\"report_fastqc\">测序质检</el-menu-item>\n          <el-menu-item index=\"1-1\" @click=\"report_mappingqc\">比对结果质检</el-menu-item>\n        </el-menu-item-group>\n        <el-menu-item-group>\n          <span slot=\"\">转录本拼接概况</span>\n          <el-menu-item index=\"2-0\" @click=\"report_new_trans\">新转录本概况</el-menu-item>\n        </el-menu-item-group>\n        <el-menu-item-group>\n          <span slot=\"\">基因表达量</span>\n          <el-menu-item index=\"3-0\" @click=\"report_expr_matrix\">基因表达量表格（counts）</el-menu-item>\n        </el-menu-item-group>\n        <el-menu-item-group>\n          <span slot=\"\">样本聚类概览</span>\n          <el-menu-item index=\"4-0\" @click=\"plotCluster\">样本聚类</el-menu-item>\n          <!-- <a :href=\"'/projects/'+ $store.state.projectId +'/results/050.DESeq2/plotCluster.pdf'\" target=\"_blank\"><el-menu-item index=\"4-0\" >样本聚类</el-menu-item></a> -->\n          <a :href=\"'/projects/'+ $store.state.projectId +'/results/050.DESeq2/plotPCA_deseq.pdf'\" target=\"_blank\"><el-menu-item index=\"4-1\" >PCA主成分分析</el-menu-item></a>\n          <a :href=\"'/projects/'+ $store.state.projectId +'/results/050.DESeq2/plotMA_deseq.pdf'\" target=\"_blank\"><el-menu-item index=\"4-2\" >MA图</el-menu-item></a>\n          <a :href=\"'/projects/'+ this.$store.state.projectId +'/results/050.DESeq2/ALL.pairs.pdf'\" target=\"_blank\"><el-menu-item index=\"4-3\" >样本相关性图</el-menu-item></a>\n        </el-menu-item-group>\n        <el-menu-item-group>\n          <span slot=\"\">基因差异表达分析</span>\n          <el-menu-item-group v-for=\"(item, index) in $store.state.info.experimentDesign.experiments\" :key=\"index\">\n            <span slot=\"\" style=\"font-size:14px\">比较：{{item['_case']}} vs {{item['_control']}}</span>\n            <el-menu-item :index=\"'5-' + index\" @click=\"report_volcano_plot(item['_case'], item['_control'], index)\">火山图</el-menu-item>\n            <el-menu-item :index=\"'5-' + index + '-1'\" @click=\"report_deg(item['_case'], item['_control'], index)\">差异表达基因</el-menu-item>\n            <el-menu-item :index=\"'5-' + index + '-2'\" @click=\"heatmap(item['_case'], item['_control'], index)\">Heat Map</el-menu-item>\n          </el-menu-item-group>\n        </el-menu-item-group>\n    </el-menu>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n\n    }\n  },\n  components: {\n  },\n  mounted () {\n    switch (this.$route.path) {\n      case '/report':\n        this.$store.commit('setleftMenuIndex', '0-0')\n        break;\n    }\n  },\n  methods: {\n    report () {\n      this.$store.commit('setleftMenuIndex', '0-0')\n      this.$router.push({'name': 'report'})\n    },\n    report_deg (_case, _control, index) {\n      this.$store.commit('set_case', _case)\n      this.$store.commit('set_control', _control)\n      this.$store.commit('setleftMenuIndex', '5-' + index + '-1')\n      this.$router.push({'name': 'report_deg', query: {'_case': _case, '_control': _control}})\n    },\n    report_fastqc () {\n      this.$store.commit('setleftMenuIndex', '1-0')\n      this.$router.push({'name': 'report_fastqc'})\n    },\n    report_mappingqc () {\n      this.$store.commit('setleftMenuIndex', '1-1')\n      this.$router.push({'name': 'report_mappingqc'})\n    },\n    report_new_trans () {\n      this.$store.commit('setleftMenuIndex', '2-0')\n      this.$router.push({'name': 'report_new_trans'})\n    },\n    report_expr_matrix () {\n      this.$store.commit('setleftMenuIndex', '3-0')\n      this.$router.push({'name': 'report_expr_matrix'})\n    },\n    report_volcano_plot (_case, _control, index) {\n      this.$store.commit('setleftMenuIndex', '5-' + index)\n      this.$store.commit('set_case', _case)\n      this.$store.commit('set_control', _control)\n      this.$router.push({'name': 'report_volcano_plot', query: {'_case': _case, '_control': _control}})\n    },\n    plotCluster () {\n      this.$store.commit('setleftMenuIndex', '4-0')\n      this.$router.push({'name': 'plotCluster'})\n    },\n    plot_cluster () {\n      this.$store.commit('setleftMenuIndex', '4-0')\n    },\n    plot_pca () {\n      this.$store.commit('setleftMenuIndex', '4-1')\n    },\n    plot_ma () {\n      this.$store.commit('setleftMenuIndex', '4-2')\n    },\n    plot_correlation () {\n      this.$store.commit('setleftMenuIndex', '4-3')\n    },\n    heatmap (_case, _control, index) {\n      this.$store.commit('setleftMenuIndex', '5-' + index + '-2')\n      this.$store.commit('set_case', _case)\n      this.$store.commit('set_control', _control)\n      let formData = new FormData()\n      formData.append('username', this.$store.state.username)\n      formData.append('p', this.$store.state.projectId)\n      formData.append('caseSample', _case)\n      formData.append('controlSample', _control)\n      this.axios.post('/server/heatmap.app.for_report', formData).then((res) => {\n        this.$store.commit('setheatmapJson', res.data.message)\n        this.$router.push({'name': 'heatmap', query: {'_case': _case, '_control': _control}})\n      })\n    },\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.cursor-pointer {\n  cursor: pointer;\n}\nli {\n  list-style: none;\n}\na:hover, a:visited, a:link, a:active {\n  text-decoration: none;\n  out-line: none;\n}\n</style>\n<style media=\"screen\">\n  .el-menu {\n    /* border-right: none; */\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/leftMenu.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-menu',{staticClass:\"el-menu-vertical-demo\",staticStyle:{\"padding\":\"0 10px\"},attrs:{\"default-active\":_vm.$store.state.leftMenuIndex}},[_c('el-menu-item',{attrs:{\"index\":\"0-0\"},on:{\"click\":_vm.report}},[_vm._v(\"报告首页\")]),_vm._v(\" \"),_c('el-menu-item-group',[_c('span',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"质量控制\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"1-0\"},on:{\"click\":_vm.report_fastqc}},[_vm._v(\"测序质检\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"1-1\"},on:{\"click\":_vm.report_mappingqc}},[_vm._v(\"比对结果质检\")])],1),_vm._v(\" \"),_c('el-menu-item-group',[_c('span',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"转录本拼接概况\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"2-0\"},on:{\"click\":_vm.report_new_trans}},[_vm._v(\"新转录本概况\")])],1),_vm._v(\" \"),_c('el-menu-item-group',[_c('span',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"基因表达量\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"3-0\"},on:{\"click\":_vm.report_expr_matrix}},[_vm._v(\"基因表达量表格（counts）\")])],1),_vm._v(\" \"),_c('el-menu-item-group',[_c('span',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"样本聚类概览\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"4-0\"},on:{\"click\":_vm.plotCluster}},[_vm._v(\"样本聚类\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":'/projects/'+ _vm.$store.state.projectId +'/results/050.DESeq2/plotPCA_deseq.pdf',\"target\":\"_blank\"}},[_c('el-menu-item',{attrs:{\"index\":\"4-1\"}},[_vm._v(\"PCA主成分分析\")])],1),_vm._v(\" \"),_c('a',{attrs:{\"href\":'/projects/'+ _vm.$store.state.projectId +'/results/050.DESeq2/plotMA_deseq.pdf',\"target\":\"_blank\"}},[_c('el-menu-item',{attrs:{\"index\":\"4-2\"}},[_vm._v(\"MA图\")])],1),_vm._v(\" \"),_c('a',{attrs:{\"href\":'/projects/'+ this.$store.state.projectId +'/results/050.DESeq2/ALL.pairs.pdf',\"target\":\"_blank\"}},[_c('el-menu-item',{attrs:{\"index\":\"4-3\"}},[_vm._v(\"样本相关性图\")])],1)],1),_vm._v(\" \"),_c('el-menu-item-group',[_c('span',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"基因差异表达分析\")]),_vm._v(\" \"),_vm._l((_vm.$store.state.info.experimentDesign.experiments),function(item,index){return _c('el-menu-item-group',{key:index},[_c('span',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"比较：\"+_vm._s(item['_case'])+\" vs \"+_vm._s(item['_control']))]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":'5-' + index},on:{\"click\":function($event){_vm.report_volcano_plot(item['_case'], item['_control'], index)}}},[_vm._v(\"火山图\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":'5-' + index + '-1'},on:{\"click\":function($event){_vm.report_deg(item['_case'], item['_control'], index)}}},[_vm._v(\"差异表达基因\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":'5-' + index + '-2'},on:{\"click\":function($event){_vm.heatmap(item['_case'], item['_control'], index)}}},[_vm._v(\"Heat Map\")])],1)})],2)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c7fc9224\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/leftMenu.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c7fc9224\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./leftMenu.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c7fc9224\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./leftMenu.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./leftMenu.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./leftMenu.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c7fc9224\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./leftMenu.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c7fc9224\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/leftMenu.vue\n// module id = null\n// module chunks = ","// https://d3js.org Version 4.7.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance1(a, b) {\n  var l = a._.r;\n  while (a !== b) l += 2 * (a = a.next)._.r;\n  return l - b._.r;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          if (sj + a._.r + b._.r > distance1(j, b)) a = j; else b = j;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          if (distance1(a, k) > sk + a._.r + b._.r) a = k; else b = k;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/build/d3.js\n// module id = f4AQ\n// module chunks = 0"],"sourceRoot":""}