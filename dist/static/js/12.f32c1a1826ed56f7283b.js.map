{"version":3,"sources":["webpack:///src/components/report_ma_plot.vue","webpack:///./src/components/report_ma_plot.vue?7640","webpack:///./src/components/report_ma_plot.vue"],"names":["report_ma_plot","data","rangeShow","showNum","arr","geneNameShow","xLeft","yTop","xmin","xmax","ymin","ymax","radius","width","height","pvalue","FDR","log2FoldChange","components","leftMenu","degComp","imgMenuShowComp","[object Object]","this","$store","state","degFilterArgs","getData","$nextTick","MathJax","Hub","Queue","watch","$route","methods","_case","sessionStorage","getItem","_control","axios","get","username","projectId","then","res","length","slice","initD3","xLeftChange","$message","message","duration","$router","push","name","d3","attr","remove","self","padding","svg","append","xScale","domain","range","yScale","tooltip","style","text","selectAll","enter","filter","d","on","i","event","pageY","pageX","type","size","Math","abs","xAxis","scale","yAxis","call","circleColor","classed","components_report_ma_plot","render","_vm","_h","$createElement","_c","_self","staticStyle","margin-top","directives","rawName","value","expression","border-right","attrs","_v","staticClass","id","step","change","model","callback","$$v","display","active-color","inactive-color","min","label","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/12.f32c1a1826ed56f7283b.js","sourcesContent":["<template>\n  <el-container style=\"height:calc(100% - 62px);margin-top:2px\">\n    <el-aside v-show=\"$store.state.menuShow\" width=\"350px;\" style=\"width:300px;height:100%;border-right:1px solid #e6e6e6\">\n      <leftMenu style=\"margin-top:5px\"></leftMenu>\n    </el-aside>\n    <el-main>\n      <imgMenuShowComp></imgMenuShowComp>\n\n      <degComp></degComp>\n\n      <div class=\"\">\n        <p>MA plot 展示了基因在样本间的表达量丰度和表达量变化之间的关系。MA plot 的 X 轴是基因在比对的两类样本中的丰度平均值，Y 轴是为 log2(表达差异倍数取)，Y 轴是在衡量基因表达量的变化，表明一个基因在实验组中上调还是下调。例如 A vs B 的差异表达基因 G，在样本 A 中的表达量为 500，在样本 B 中的表达量为 2000，则 X 轴坐标为是\n        <p>$$  \\frac{500 + 2000}{2} = 1250 $$</p>\n        Y 轴坐标为\n        <p>$$ \\log_{2}{\\frac{500}{2000}} = -2 $$</p>\n\n        <div class=\"min-width-div\">\n              <div id=\"canvas\" class=\"display-inline-block vertical-align-top\"></div>\n\n              <div class=\"clear\"></div>\n\n              <table class=\"gridtable\" v-show=\"rangeShow\">\n                <tr>\n                    <th>参数</th><th>操作</th>\n                </tr>\n                <tr>\n                  <td>pvalue &le;</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"pvalue\" :step=\"0.1\" @change=\"xLeftChange\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>FDR &le;</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"FDR\" :step=\"0.1\" @change=\"xLeftChange\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Log2FoldChange (绝对值) &ge;</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"log2FoldChange\" :step=\"0.1\" @change=\"xLeftChange\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>是否显示基因名</td>\n                  <td>\n                    <el-switch\n                      style=\"display: block\"\n                      v-model=\"geneNameShow\"\n                      active-color=\"#409EFF\"\n                      inactive-color=\"#e4e7ed\"\n                      @change=\"initD3\"\n                    >\n                    </el-switch>\n                  </td>\n                </tr>\n                <tr>\n                  <td>显示基因个数</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"showNum\" @change=\"getData\" :min=\"0\" label=\"描述文字\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>x轴最小值</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"xmin\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>x轴最大值</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"xmax\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>y轴最小值</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"ymin\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>y轴最大值</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"ymax\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>宽</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"width\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>高</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"height\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n                <tr>\n                  <td>点的半径</td>\n                  <td>\n                    <el-input-number size=\"mini\" v-model=\"radius\" :min=\"0\" :step=\"0.1\" @change=\"initD3\"></el-input-number>\n                  </td>\n                </tr>\n              </table>\n        </div>\n    </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport leftMenu from './leftMenu.vue'\nimport degComp from './degComp.vue'\nimport imgMenuShowComp from './imgMenuShowComp.vue'\n\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      rangeShow: false,\n      showNum: 3000,\n      arr: [],\n      geneNameShow: false,\n      xLeft: 1,\n      yTop: 0,\n      xmin: -100,\n      xmax: 8000,\n      ymin: -3,\n      ymax: 3,\n      radius: 1.5,\n      width: 800,\n      height: 600,\n      pvalue: 0.05,\n      FDR: 0.05,\n      log2FoldChange: 1,\n    }\n  },\n  components: {\n    leftMenu,\n    degComp,\n    imgMenuShowComp\n  },\n  created () {\n    // this.ymin = - this.$store.state.degFilterArgs.log2FoldChange * 3\n    // this.ymax = this.$store.state.degFilterArgs.log2FoldChange * 3\n    this.pvalue = this.$store.state.degFilterArgs.pvalue\n    this.FDR = this.$store.state.degFilterArgs.FDR\n    this.log2FoldChange = this.$store.state.degFilterArgs.log2FoldChange\n  },\n  mounted () {\n    this.getData()\n    this.$nextTick(function() {\n        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub])\n    })\n  },\n  watch: {\n    '$route': 'getDataReset'\n  },\n  methods: {\n    getDataReset () {\n      this.geneNameShow = false\n      this.showNum = 3000\n      this.xLeft = 1\n      this.yTop = 2\n      this.xmin = -3\n      this.xmax = 3\n      this.ymin = 0\n      this.ymax = 12\n      this.width = 800\n      this.height = 600\n      this.radius = 1.5\n      this.getData()\n    },\n    getData () {\n      let _case = sessionStorage.getItem('_case')\n      let _control = sessionStorage.getItem('_control')\n      this.axios.get('/server/ma_data?username=' + this.$store.state.username + '&p=' + this.$store.state.projectId + '&_case=' + _case + '&_control=' + _control + '&gene_num=' + this.showNum).then((res) => {\n        if (res.data.length > 0) {\n          res.data = res.data.slice(1)\n          this.arr = res.data\n          this.rangeShow = true\n          this.initD3()\n          this.xLeftChange()\n        } else {\n          this.$message({\n            message: '暂无数据!',\n            duration: 1000\n          })\n        }\n      })\n    },\n    backReport () {\n      this.$router.push({'name': 'report'})\n    },\n    change () {\n      let all = d3.selectAll('.red')\n      all.attr('class', 'green')\n    },\n    initD3 () {\n      let hassvg = d3.selectAll('svg')\n      if (hassvg) {\n        d3.selectAll('svg').remove()\n      }\n      let self = this\n      let width = this.width\n      let height = this.height\n      let padding = {left: 50, right: 30, top: 30, bottom: 30}\n      let svg = d3.select('#canvas')\n        .append('svg')\n        .attr('id', 'svg')\n        .attr('width', width)\n        .attr('height', height)\n      let xScale = d3.scaleLinear()\n        .domain([this.xmin, this.xmax])\n        .range([0, width - padding.left - padding.right])\n      let yScale = d3.scaleLinear()\n        .domain([this.ymin - 0.2, this.ymax])\n        .range([height - padding.top - padding.bottom, 0])\n      let tooltip = d3.select('body')\n      \t.append('div')\n      \t.style('position', 'absolute')\n        .style('z-index', '10')\n      \t.style('color', '#3497db')\n        .style('visibility', 'hidden')\n        .style('font-size', '12px')\n      \t.style('font-weight', 'bold')\n      \t.text('')\n      // 封闭的 box 上边和右边两条线\n      svg.append(\"rect\")\n        .attr(\"x\", 50)\n        .attr(\"y\", 0)\n        .attr(\"width\", width - 50)\n        .attr(\"height\", height - 30)\n        .attr(\"fill\", 'none')\n        .attr(\"stroke\", 'black')\n      svg.append('line')\n        .attr('x1', padding.left + xScale(self.xmin))\n        .attr('y1', padding.bottom + yScale(0))\n        .attr('x2', padding.left * 2 + xScale(self.xmax))\n        .attr('y2', padding.bottom + yScale(0))\n        .attr(\"stroke\",\"red\")\n      // .style(\"stroke-dasharray\", \"5\")\n      let circles = svg.selectAll('circle')\n        .data(self.arr)\n        .enter()\n        .append('circle')\n        .filter((d) => {\n          return d[2] > self.ymin && d[2] < self.ymax\n        })\n        .attr('cx', (d) => {\n          return padding.left + xScale(d[1])\n        })\n        .attr('cy', (d) => {\n          return padding.bottom + yScale(d[2])\n        })\n        .attr('r', self.radius)\n        .on('mouseover', function (d, i) {\n          return tooltip.style('visibility', 'visible').text(d[5])\n        })\n        .on('mousemove', function (d, i) {\n          return tooltip.style('top', (event.pageY-10)+'px').style('left',(event.pageX+10)+'px')\n        })\n        .on('mouseout', function (d, i) {\n          return tooltip.style('visibility', 'hidden')\n        })\n      // 超出y轴最小值用倒三角形表示\n      svg.selectAll('.triangle')\n        .data(self.arr)\n        .enter()\n        .append(\"path\")\n        .filter((d) => {\n          return d[2] < self.ymin\n        })\n        .attr(\"d\", d3.symbol().type(d3.symbolTriangle).size(20))\n        .attr(\"transform\", function(d) {\n          return \"translate(\"+ (padding.left + xScale(d[1])) +\",\"+ (padding.bottom + yScale(self.ymin)) +\")\" + \"rotate(180)\"\n        })\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", (d, i) => {\n          if (Math.abs(d[2]) >= self.log2FoldChange && d[3] <= self.pvalue && d[4] <= self.FDR) {\n            return \"red\"\n          } else {\n            return \"black\"\n          }\n        })\n        .on('mouseover', function (d, i) {\n          return tooltip.style('visibility', 'visible').text(d[5])\n        })\n        .on('mousemove', function (d, i) {\n          return tooltip.style('top', (event.pageY-10)+'px').style('left',(event.pageX+10)+'px')\n        })\n        .on('mouseout', function (d, i) {\n          return tooltip.style('visibility', 'hidden')\n        })\n      // 超出y轴最小值用正三角形表示\n      svg.selectAll('.triangle')\n        .data(self.arr)\n        .enter()\n        .append(\"path\")\n        .filter((d) => {\n          return d[2] > self.ymax\n        })\n        .attr(\"d\", d3.symbol().type(d3.symbolTriangle).size(20))\n        .attr(\"transform\", function(d) {\n          return \"translate(\"+ (padding.left + xScale(d[1])) +\",\"+ (padding.bottom + yScale(self.ymax)) +\")\"\n        })\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", (d, i) => {\n          if (Math.abs(d[2]) >= self.log2FoldChange && d[3] <= self.pvalue && d[4] <= self.FDR) {\n            return \"red\"\n          } else {\n            return \"black\"\n          }\n        })\n        .on('mouseover', function (d, i) {\n          return tooltip.style('visibility', 'visible').text(d[5])\n        })\n        .on('mousemove', function (d, i) {\n          return tooltip.style('top', (event.pageY-10)+'px').style('left',(event.pageX+10)+'px')\n        })\n        .on('mouseout', function (d, i) {\n          return tooltip.style('visibility', 'hidden')\n        })\n      let xAxis = d3.axisBottom()\n        .scale(xScale)\n        // .ticks(3)\n      let yAxis = d3.axisLeft()\n        .scale(yScale)\n        // .ticks(3)\n      svg.append('g')\n        .attr('class', 'axis')\n        .attr('transform', 'translate(' + padding.left + ',' + (height - padding.bottom) + ')')\n        .call(xAxis)\n        .append('text')\n        .text('baseMean')\n        .attr('fill', '#000')\n        .style('font-size', '14px')\n        .attr('transform', 'translate('+ width/2.2 + ', 30)')\n      svg.append('g')\n        .attr('class', 'axis')\n        .attr('transform', 'translate(' + padding.left + ',' + padding.top + ')')\n        .call(yAxis)\n      svg.append('text')\n        .text('log2FoldChange')\n        .attr('fill', '#000')\n        .attr('transform', 'translate(15, '+ height / 2 +') rotate(-90)')\n\n      // 删除 domain 两条线\n      d3.selectAll('.domain').remove()\n\n      //  显示满足条件的gene名称\n      if (self.geneNameShow === true) {\n        svg.selectAll('text')\n          .data(self.arr)\n          .enter()\n          .append('text')\n          .filter((d) => {\n            if (Math.abs(d[2]) >= self.log2FoldChange) {\n              return d[3] <= self.pvalue && d[4] <= self.FDR\n            }\n          })\n          .text((d) => {\n            return d[5]\n          })\n          .attr('x', (d) => {\n            return padding.left + xScale(d[1]) + 5\n          })\n          .attr('y', (d) => {\n            return padding.bottom + yScale(d[2])\n          })\n          .attr('fill', '#3497db')\n          .style('font-size', '6px')\n        \t.style('font-weight', 'bold')\n      }\n      if (self.xLeft !== 0 || self.yTop !== 0) {\n        self.circleColor()\n      }\n    },\n    xLeftChange () {\n      let self = this\n      let svg = d3.selectAll('circle')\n        .classed('red', (d, i) => {\n          if (Math.abs(d[2]) >= self.log2FoldChange) {\n            return d[3] <= self.pvalue && d[4] <= self.FDR\n          }\n        })\n        this.initD3()\n    },\n    // 基因名显示的时候 circle颜色不变\n    circleColor () {\n      let self = this\n      let svg = d3.selectAll('circle')\n        .classed('red', (d, i) => {\n          if (Math.abs(d[2]) >= self.log2FoldChange) {\n            return d[3] <= self.pvalue && d[4] <= self.FDR\n          }\n        })\n    },\n    xvaluechange () {\n      this.initD3()\n    }\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.content {\n  float:left;\n  /* width: 60%; */\n  width: calc(100% - 350px);\n  /* min-width: 900px; */\n  padding: 0 20px;\n  margin: 19px auto;\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n.span-style {\n  display:inline-block;\n  width:120px;\n  text-align:right;\n}\ntable.gridtable {\n    width: 800px;\n    text-align: center;\n    font-size:14px;\n    color:#333333;\n    border-width: 1px;\n    border-color: #ebeef5;\n    border-collapse: collapse;\n}\ntable.gridtable th {\n    color: #333;\n    border-width: 1px;\n    padding: 8px;\n    border-style: solid;\n    border-color: #ebeef5;\n}\ntable.gridtable td {\n    border-width: 1px;\n    padding: 4px;\n    border-style: solid;\n    border-color: #ebeef5;\n    background-color: #ffffff;\n}\npath{\n    fill: none;\n    stroke: cornflowerblue;\n    stroke-width: 2px;\n}\n.clear {\n  clear: both;\n}\n.min-width-div {\n  min-width: 900px;\n}\n</style>\n<style>\n.domain,.tick line {\n    stroke: gray;\n    stroke-width: 1px;\n}\n.margin-0-auto {\n  margin: 0 auto;\n}\n.red {\n  fill: red;\n}\n.text-align-center {\n  text-align: center;\n}\n.el-slider.is-vertical .el-slider__runway{\n  margin-top: -25px;\n}\n.yrange {\n  width:5px;\n}\n.display-inline-block {\n  float: left;\n  /* display:inline-block; */\n}\n.vertical-align-top {\n  vertical-align: top;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/report_ma_plot.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticStyle:{\"height\":\"calc(100% - 62px)\",\"margin-top\":\"2px\"}},[_c('el-aside',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$store.state.menuShow),expression:\"$store.state.menuShow\"}],staticStyle:{\"width\":\"300px\",\"height\":\"100%\",\"border-right\":\"1px solid #e6e6e6\"},attrs:{\"width\":\"350px;\"}},[_c('leftMenu',{staticStyle:{\"margin-top\":\"5px\"}})],1),_vm._v(\" \"),_c('el-main',[_c('imgMenuShowComp'),_vm._v(\" \"),_c('degComp'),_vm._v(\" \"),_c('div',{},[_c('p',[_vm._v(\"MA plot 展示了基因在样本间的表达量丰度和表达量变化之间的关系。MA plot 的 X 轴是基因在比对的两类样本中的丰度平均值，Y 轴是为 log2(表达差异倍数取)，Y 轴是在衡量基因表达量的变化，表明一个基因在实验组中上调还是下调。例如 A vs B 的差异表达基因 G，在样本 A 中的表达量为 500，在样本 B 中的表达量为 2000，则 X 轴坐标为是\\n      \")]),_c('p',[_vm._v(\"$$  \\\\frac{500 + 2000}{2} = 1250 $$\")]),_vm._v(\"\\n      Y 轴坐标为\\n      \"),_c('p',[_vm._v(\"$$ \\\\log_{2}{\\\\frac{500}{2000}} = -2 $$\")]),_vm._v(\" \"),_c('div',{staticClass:\"min-width-div\"},[_c('div',{staticClass:\"display-inline-block vertical-align-top\",attrs:{\"id\":\"canvas\"}}),_vm._v(\" \"),_c('div',{staticClass:\"clear\"}),_vm._v(\" \"),_c('table',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rangeShow),expression:\"rangeShow\"}],staticClass:\"gridtable\"},[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"操作\")])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"pvalue ≤\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\",\"step\":0.1},on:{\"change\":_vm.xLeftChange},model:{value:(_vm.pvalue),callback:function ($$v) {_vm.pvalue=$$v},expression:\"pvalue\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"FDR ≤\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\",\"step\":0.1},on:{\"change\":_vm.xLeftChange},model:{value:(_vm.FDR),callback:function ($$v) {_vm.FDR=$$v},expression:\"FDR\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"Log2FoldChange (绝对值) ≥\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\",\"step\":0.1},on:{\"change\":_vm.xLeftChange},model:{value:(_vm.log2FoldChange),callback:function ($$v) {_vm.log2FoldChange=$$v},expression:\"log2FoldChange\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"是否显示基因名\")]),_vm._v(\" \"),_c('td',[_c('el-switch',{staticStyle:{\"display\":\"block\"},attrs:{\"active-color\":\"#409EFF\",\"inactive-color\":\"#e4e7ed\"},on:{\"change\":_vm.initD3},model:{value:(_vm.geneNameShow),callback:function ($$v) {_vm.geneNameShow=$$v},expression:\"geneNameShow\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"显示基因个数\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\",\"min\":0,\"label\":\"描述文字\"},on:{\"change\":_vm.getData},model:{value:(_vm.showNum),callback:function ($$v) {_vm.showNum=$$v},expression:\"showNum\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"x轴最小值\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.xmin),callback:function ($$v) {_vm.xmin=$$v},expression:\"xmin\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"x轴最大值\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.xmax),callback:function ($$v) {_vm.xmax=$$v},expression:\"xmax\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"y轴最小值\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.ymin),callback:function ($$v) {_vm.ymin=$$v},expression:\"ymin\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"y轴最大值\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.ymax),callback:function ($$v) {_vm.ymax=$$v},expression:\"ymax\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"宽\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.width),callback:function ($$v) {_vm.width=$$v},expression:\"width\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"高\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\"},on:{\"change\":_vm.initD3},model:{value:(_vm.height),callback:function ($$v) {_vm.height=$$v},expression:\"height\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"点的半径\")]),_vm._v(\" \"),_c('td',[_c('el-input-number',{attrs:{\"size\":\"mini\",\"min\":0,\"step\":0.1},on:{\"change\":_vm.initD3},model:{value:(_vm.radius),callback:function ($$v) {_vm.radius=$$v},expression:\"radius\"}})],1)])])])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-61a4e8ce\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/report_ma_plot.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61a4e8ce\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./report_ma_plot.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61a4e8ce\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./report_ma_plot.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./report_ma_plot.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./report_ma_plot.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61a4e8ce\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./report_ma_plot.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-61a4e8ce\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/report_ma_plot.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}