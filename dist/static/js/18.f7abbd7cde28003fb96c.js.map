{"version":3,"sources":["webpack:///src/components/report_expr_matrix.vue","webpack:///./src/components/report_expr_matrix.vue?1a46","webpack:///./src/components/report_expr_matrix.vue"],"names":["__webpack_exports__","data","tpmsArray","arr","mDataProp","textareaGeneName","textareaGeneId","components","leftMenu","__WEBPACK_IMPORTED_MODULE_0__leftMenu_vue__","imgMenuShowComp","__WEBPACK_IMPORTED_MODULE_1__imgMenuShowComp_vue__","[object Object]","this","getTpms","$nextTick","MathJax","Hub","Queue","methods","axios","$store","state","projectId","username","then","res","aData","length","obj","tpms","k","push","mRender","type","full","Math","ceil","sort","unshift","initTable","self","$","document","ready","DataTable","pageLength","bPaginate","bStateSave","bScrollCollapse","bLengthChange","bFilter","bSort","bInfo","bAutoWidth","bJQueryUI","bDestroy","bProcessing","bServerSide","sAjaxDataProp","sAjaxSource","replace","aoColumns","setTimeout","table","ajax","reload","components_report_expr_matrix","render","_vm","_h","$createElement","_c","_self","staticStyle","height","margin-top","directives","name","rawName","value","expression","width","border-right","attrs","_v","margin","separator","to","path","_s","projectName","min-width","shadow","display","vertical-align","staticClass","for","rows","placeholder","model","callback","$$v","float","on","click","$event","clear","margin-right","search","id","cellspacing","_l","item","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","report_expr_matrix"],"mappings":"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","file":"static/js/18.f7abbd7cde28003fb96c.js","sourcesContent":["<template>\n  <el-container style=\"height:calc(100% - 62px);margin-top:2px\">\n    <el-aside v-show=\"$store.state.menuShow\" width=\"350px;\" style=\"width:300px;height:100%;border-right:1px solid #e6e6e6\">\n      <leftMenu style=\"margin-top:5px\"></leftMenu>\n    </el-aside>\n    <el-main>\n      <div class=\"\">\n        <imgMenuShowComp></imgMenuShowComp>\n\n        <el-breadcrumb separator=\"/\" style=\"margin:5px 0 50px 0\">\n          <el-breadcrumb-item :to=\"{ path: 'report' }\">项目 {{$store.state.projectName}}</el-breadcrumb-item>\n          <el-breadcrumb-item>基因表达量表格</el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <h2>基因表达量表格</h2>\n\n        <p>一个基因表达水平的直接体现就是看有多少 reads 回帖到该基因区域，这个可以称之为基因的表达丰度。在转录组的分析中，落在一个基因区域内的 read 数目取决于基因长度和测序深度（一般来说，基因越长 read 数目越多，测序深度越高，则一个基因对应的 read 数目也相对越多），因此我们常用 RPKM、TPM 等作为转录组数据定量的表示方法。它们都是对表达量进行标准化的方法，而标准化的对象就是基因长度与测序深度。</p>\n\n        <p>Transcripts Per Kilobase of exonmodel per Million mapped reads (每千个碱基的转录每百万映射读取的 Transcripts， TPM) 是一种优化的 RPKM 计算方法，TPM 概括了基因的长度、表达量和基因数目。在每个样本内，所有基因的 TPM 值总和为 1M，因此各个样本都可以保证在一个统一的标准下进行基因表达量的比较。</p>\n\n        <p>$$ TPM_{i} = \\frac{ \\frac{ N_{i} }{ L_{i} } * 1000000}{\\sum_{i=1}^{n} \\frac{N_{i}}{L_{i}}}$$</p>\n\n        <p>N<sub>i</sub>：mapping 到基因 i 上的 read 数；</p>\n        <p>L<sub>i</sub>：基因 i 的外显子长度的总和。</p>\n        <p>在一个样本中一个基因的 TPM：先对每个基因的read数用基因的长度进行校正，之后再用校正后的这个基因 read 数 (N<sub>i</sub>/L<sub>i</sub>) 与校正后的这个样本的所有 read 求商。</p>\n\n        <el-card class=\"\" style=\"width:1300px;min-width:1300px\" shadow=\"hover\">\n          <div class=\"\" style=\"display:inline-block;vertical-align:top;\">\n            <div class=\"\">\n              <div class=\"labelStyle\">\n                <label for=\"maxpval\" class=\"label-font\">geneId</label>\n              </div>\n              <el-input\n                style=\"width:400px;\"\n                type=\"textarea\"\n                :rows=\"4\"\n                placeholder=\"请输入内容,以英文逗号分隔\"\n                v-model=\"textareaGeneId\">\n              </el-input>\n            </div>\n          </div>\n          <div class=\"\" style=\"display:inline-block;vertical-align:top;\">\n            <div class=\"\">\n              <div class=\"labelStyle\">\n                <label for=\"maxpval\" class=\"label-font\">geneName</label>\n              </div>\n              <el-input\n                style=\"width:400px;\"\n                type=\"textarea\"\n                :rows=\"4\"\n                placeholder=\"请输入内容,以英文逗号分隔\"\n                v-model=\"textareaGeneName\">\n              </el-input>\n            </div>\n            <br>\n            <div class=\"\">\n              <div class=\"labelStyle\">\n              </div>\n              <el-button style=\"float:right\" type=\"info\" @click=\"clear()\">清空</el-button>\n              <el-button style=\"float:right;margin-right:10px;\" type=\"primary\" @click=\"search()\">查询</el-button>\n            </div>\n          </div>\n        </el-card>\n        <br>\n\n        <!-- <div class=\"overflow-auto\"> -->\n        <div class=\"\">\n          <table id=\"patients\" cellspacing=\"0\" class=\"display table table-striped table-bordered\">\n              <thead>\n              <tr>\n                  <th v-for=\"item in tpmsArray\">{{item}}</th>\n              </tr>\n              </thead>\n          </table>\n        </div>\n      </div>\n      <div class=\"clear\">\n\n      </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport leftMenu from './leftMenu.vue'\nimport imgMenuShowComp from './imgMenuShowComp.vue'\n\nexport default {\n  data () {\n    return {\n      tpmsArray: [],\n      arr: [{\n          \"mDataProp\" : \"geneId\"\n      }, {\n          \"mDataProp\" : \"geneName\"\n      }],\n      textareaGeneName: '',\n      textareaGeneId: ''\n    }\n  },\n  components: {\n    leftMenu,\n    imgMenuShowComp\n  },\n  mounted () {\n    this.getTpms()\n    this.$nextTick(function() {\n        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub]);\n    });\n  },\n  methods: {\n    getTpms () {\n      this.axios('/server/gene_tpms?p=' + this.$store.state.projectId + '&username=' + this.$store.state.username + '&sEcho=1&iDisplayStart=0&iDisplayLength=1').then((res) => {\n        if (res.data.aData.length > 0)  {\n          let obj = res.data.aData[0].tpms\n          for (let k in obj) {\n            this.tpmsArray.push(k)\n            this.arr.push({\n                \"mDataProp\" : \"tpms\",\n                \"mRender\" : function(data, type, full) {\n                    return Math.ceil(data[k])\n                }\n            })\n          }\n          // table head 按照 a～z 排序\n          this.tpmsArray.sort()\n          this.tpmsArray.unshift('geneName')\n          this.tpmsArray.unshift('geneId')\n        }\n        this.initTable()\n      })\n    },\n    initTable () {\n      let self = this\n      $(document).ready(function() {\n          var table = $('#patients').DataTable({\n              \"pageLength\": 25,\n              \"bPaginate\" : true,//分页工具条显示\n              //\"sPaginationType\" : \"full_numbers\",//分页工具条样式\n              \"bStateSave\" : true, //是否打开客户端状态记录功能,此功能在ajax刷新纪录的时候不会将个性化设定回复为初始化状态\n              \"bScrollCollapse\" : true, //当显示的数据不足以支撑表格的默认的高度\n              \"bLengthChange\" : true, //每页显示的记录数\n              \"bFilter\" : false, //搜索栏\n              \"bSort\" : false, //是否支持排序功能\n              \"bInfo\" : true, //显示表格信息\n              \"bAutoWidth\" : true, //自适应宽度\n              \"bJQueryUI\" : false,//是否开启主题\n              \"bDestroy\" : true,\n              \"bProcessing\" : true, //开启读取服务器数据时显示正在加载中……特别是大数据量的时候，开启此功能比较好\n              \"bServerSide\" : true,//服务器处理分页，默认是false，需要服务器处理，必须true\n              \"sAjaxDataProp\" : \"aData\",\n              //通过ajax实现分页的url路径\n              \"sAjaxSource\" : \"/server/gene_tpms?p=\" + self.$store.state.projectId + \"&username=\" + self.$store.state.username +  \"&geneName=\" + self.textareaGeneName.replace(/\\s/g,'') +  \"&geneId=\" + self.textareaGeneId.replace(/\\s/g,''),\n              \"aoColumns\" : self.arr,\n              // \"aoColumnDefs\":[{\"aTargets\":[2][1],\"mRender\":function(){\n              //        return \"<a href=#>1441</a>\"}\n              // }]\n          });\n        })\n      },\n      search () {\n        this.initTable()\n        setTimeout(() => {\n          this.table.ajax.reload()  // 重新 load table\n        }, 0)\n      },\n      clear () {\n        this.textareaGeneName = ''\n        this.textareaGeneId = ''\n      },\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.content {\n  float:left;\n  /* width: 60%; */\n  width: calc(100% - 350px);\n  padding: 0 20px;\n  margin: 19px auto;\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n.imgStyle {\n  width: 100%;\n}\n.overflow-auto {\n  overflow: auto;\n}\n.clear {\n  clear: both;\n}\n.labelStyle {\n  display: inline-block;\n  width: 95px;\n  text-align: end;\n}\n\n.filterbtnDiv {\n  float: right;\n  margin-bottom: 10px;\n}\n\n.text-align-center {\n  text-align: center;\n}\n.label-font {\n  font-size: 14px;\n}\n\n.input-style {\n  height: 20px;\n  /* margin-right: 20px; */\n  margin-top: 10px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/report_expr_matrix.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticStyle:{\"height\":\"calc(100% - 62px)\",\"margin-top\":\"2px\"}},[_c('el-aside',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$store.state.menuShow),expression:\"$store.state.menuShow\"}],staticStyle:{\"width\":\"300px\",\"height\":\"100%\",\"border-right\":\"1px solid #e6e6e6\"},attrs:{\"width\":\"350px;\"}},[_c('leftMenu',{staticStyle:{\"margin-top\":\"5px\"}})],1),_vm._v(\" \"),_c('el-main',[_c('div',{},[_c('imgMenuShowComp'),_vm._v(\" \"),_c('el-breadcrumb',{staticStyle:{\"margin\":\"5px 0 50px 0\"},attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: 'report' }}},[_vm._v(\"项目 \"+_vm._s(_vm.$store.state.projectName))]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"基因表达量表格\")])],1),_vm._v(\" \"),_c('h2',[_vm._v(\"基因表达量表格\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一个基因表达水平的直接体现就是看有多少 reads 回帖到该基因区域，这个可以称之为基因的表达丰度。在转录组的分析中，落在一个基因区域内的 read 数目取决于基因长度和测序深度（一般来说，基因越长 read 数目越多，测序深度越高，则一个基因对应的 read 数目也相对越多），因此我们常用 RPKM、TPM 等作为转录组数据定量的表示方法。它们都是对表达量进行标准化的方法，而标准化的对象就是基因长度与测序深度。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Transcripts Per Kilobase of exonmodel per Million mapped reads (每千个碱基的转录每百万映射读取的 Transcripts， TPM) 是一种优化的 RPKM 计算方法，TPM 概括了基因的长度、表达量和基因数目。在每个样本内，所有基因的 TPM 值总和为 1M，因此各个样本都可以保证在一个统一的标准下进行基因表达量的比较。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"$$ TPM_{i} = \\\\frac{ \\\\frac{ N_{i} }{ L_{i} } * 1000000}{\\\\sum_{i=1}^{n} \\\\frac{N_{i}}{L_{i}}}$$\")]),_vm._v(\" \"),_c('p',[_vm._v(\"N\"),_c('sub',[_vm._v(\"i\")]),_vm._v(\"：mapping 到基因 i 上的 read 数；\")]),_vm._v(\" \"),_c('p',[_vm._v(\"L\"),_c('sub',[_vm._v(\"i\")]),_vm._v(\"：基因 i 的外显子长度的总和。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在一个样本中一个基因的 TPM：先对每个基因的read数用基因的长度进行校正，之后再用校正后的这个基因 read 数 (N\"),_c('sub',[_vm._v(\"i\")]),_vm._v(\"/L\"),_c('sub',[_vm._v(\"i\")]),_vm._v(\") 与校正后的这个样本的所有 read 求商。\")]),_vm._v(\" \"),_c('el-card',{staticStyle:{\"width\":\"1300px\",\"min-width\":\"1300px\"},attrs:{\"shadow\":\"hover\"}},[_c('div',{staticStyle:{\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('div',{},[_c('div',{staticClass:\"labelStyle\"},[_c('label',{staticClass:\"label-font\",attrs:{\"for\":\"maxpval\"}},[_vm._v(\"geneId\")])]),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"type\":\"textarea\",\"rows\":4,\"placeholder\":\"请输入内容,以英文逗号分隔\"},model:{value:(_vm.textareaGeneId),callback:function ($$v) {_vm.textareaGeneId=$$v},expression:\"textareaGeneId\"}})],1)]),_vm._v(\" \"),_c('div',{staticStyle:{\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('div',{},[_c('div',{staticClass:\"labelStyle\"},[_c('label',{staticClass:\"label-font\",attrs:{\"for\":\"maxpval\"}},[_vm._v(\"geneName\")])]),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"type\":\"textarea\",\"rows\":4,\"placeholder\":\"请输入内容,以英文逗号分隔\"},model:{value:(_vm.textareaGeneName),callback:function ($$v) {_vm.textareaGeneName=$$v},expression:\"textareaGeneName\"}})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{},[_c('div',{staticClass:\"labelStyle\"}),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"info\"},on:{\"click\":function($event){_vm.clear()}}},[_vm._v(\"清空\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin-right\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.search()}}},[_vm._v(\"查询\")])],1)])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{},[_c('table',{staticClass:\"display table table-striped table-bordered\",attrs:{\"id\":\"patients\",\"cellspacing\":\"0\"}},[_c('thead',[_c('tr',_vm._l((_vm.tpmsArray),function(item){return _c('th',[_vm._v(_vm._s(item))])}))])])])],1),_vm._v(\" \"),_c('div',{staticClass:\"clear\"})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-52793d5c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/report_expr_matrix.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-52793d5c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./report_expr_matrix.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./report_expr_matrix.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./report_expr_matrix.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-52793d5c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./report_expr_matrix.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-52793d5c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/report_expr_matrix.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}