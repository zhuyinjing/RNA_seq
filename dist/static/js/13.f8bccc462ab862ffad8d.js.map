{"version":3,"sources":["webpack:///src/components/plotPCA.vue","webpack:///./src/components/plotPCA.vue?75eb","webpack:///./src/components/plotPCA.vue"],"names":["plotPCA","data","checkboxValue","checkAll","checkedPCA","isIndeterminate","tableValue","conditionArr","maxValue","minValue","nameSampleMap","percentVariance","components","leftMenu","[object Object]","this","getValue","methods","axios","get","$store","state","username","projectId","then","res","pca4GeneExprMatrix","experimentDesign","i","length","push","k","conditionNumMap","sampleCoordMap","obj","name","value","initD3","val","checkedCount","$confirm","confirmButtonText","cancelButtonText","type","catch","$message","d3","remove","self","initWidth","initHeight","padding","width1","height1","arr","width2","height2","colorRandom","svgG","append","attr","style","width","height","svg","text","toFixed","yScale","range","domain","yAxis","ticks","xScale","call","xAxis","make_x_gridlines","make_y_gridlines","tickSize","tickFormat","cover","selectAll","enter","d","on","showtext","j","components_plotPCA","render","_vm","_h","$createElement","_c","_self","staticStyle","margin-top","border-right","attrs","_v","margin","separator","to","path","_s","projectName","change","handlecheckedPCAChange","model","callback","$$v","expression","_l","pca","key","label","click","$event","clearChecked","staticClass","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/13.f8bccc462ab862ffad8d.js","sourcesContent":["<template>\n  <el-container style=\"height:calc(100% - 62px);margin-top:2px\">\n    <el-aside width=\"350px;\" style=\"width:300px;height:100%;border-right:1px solid #e6e6e6\">\n      <leftMenu style=\"margin-top:5px\"></leftMenu>\n    </el-aside>\n    <el-main>\n      <div class=\"\">\n        <el-breadcrumb separator=\"/\" style=\"margin:5px 0 50px 0\">\n          <el-breadcrumb-item :to=\"{ path: 'report' }\">项目 {{$store.state.projectName}}</el-breadcrumb-item>\n          <!-- <el-breadcrumb-item :to=\"{ path: 'report_deg' }\">差异表达基因</el-breadcrumb-item>\n            <el-breadcrumb-item :to=\"{ path: 'heatmap_input' }\">绘制基因热图</el-breadcrumb-item> -->\n          <el-breadcrumb-item>PCA 主成分分析</el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <h2>PCA 主成分分析</h2>\n\n        <!-- <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选</el-checkbox> -->\n        <!-- <div style=\"margin: 15px 0;\"></div> -->\n        <el-checkbox-group v-model=\"checkedPCA\" @change=\"handlecheckedPCAChange\">\n          <el-checkbox style=\"width:20%\" v-for=\"pca in checkboxValue\" :label=\"pca\" :key=\"pca\">PC{{pca}}</el-checkbox>\n        </el-checkbox-group>\n\n        <br>\n        <el-button type=\"primary\" @click=\"initD3()\">确定</el-button>\n        <el-button type=\"info\" @click=\"clearChecked()\">清空</el-button>\n\n        <div class=\"container\"></div>\n\n      </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport leftMenu from './leftMenu.vue'\nimport * as d3 from 'd3'\n\nexport default {\n  data() {\n    return {\n      checkboxValue: [],\n      checkAll: false,\n      checkedPCA: [],\n      isIndeterminate: false,\n      tableValue: [],\n      conditionArr: [],\n      maxValue: [],\n      minValue: [],\n      nameSampleMap: {},\n      percentVariance: [],\n    }\n  },\n  components: {\n    leftMenu\n  },\n  created() {\n    this.getValue()\n  },\n  mounted() {},\n  methods: {\n    getValue() {\n      this.axios.get('/server/pca4gene?username=' + this.$store.state.username + '&p=' + this.$store.state.projectId).then((res) => {\n        this.maxValue = res.data.maxValue\n        this.minValue = res.data.minValue\n        this.percentVariance = res.data.pca4GeneExprMatrix.percentVariance\n        this.nameSampleMap = res.data.experimentDesign.nameSampleMap\n        // checkbox 选项\n        for (let i = 0; i < res.data.pca4GeneExprMatrix.percentVariance.length; i++) {\n          this.checkboxValue.push(i + 1)\n        }\n        // 默认选中前两个\n        this.checkedPCA = [this.checkboxValue[0], this.checkboxValue[1]]\n        // condition array [\"A\",\"B\",\"Normal\"]\n        for (let k in res.data.experimentDesign.conditionNumMap) {\n          this.conditionArr.push(k)\n        }\n        for (let k in res.data.pca4GeneExprMatrix.sampleCoordMap) {\n          let obj = {\n            name: k,\n            value: res.data.pca4GeneExprMatrix.sampleCoordMap[k]\n          }\n          this.tableValue.push(obj)\n        }\n        this.initD3()\n      })\n    },\n    handleCheckAllChange(val) {\n      this.checkedPCA = val ? this.checkboxValue : [];\n      this.isIndeterminate = false;\n    },\n    handlecheckedPCAChange(value) {\n      let checkedCount = value.length;\n      this.checkAll = checkedCount === this.checkboxValue.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.checkboxValue.length;\n    },\n    clearChecked () {\n      this.$confirm('此操作将清空您的选项, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.checkedPCA = []\n        }).catch(() => {});\n    },\n    initD3() {\n      if (this.checkedPCA.length < 2) {\n        this.$message('请至少选择2个PC！')\n        return\n      }\n      if (this.checkedPCA.length > 10) {\n        this.$message('最多选择10个PC，请修改您的选项！')\n        return\n      }\n      let hassvg = d3.selectAll('.d3svg')\n      if (hassvg) {\n        d3.selectAll('.d3svg').remove()\n      }\n      let self = this\n      var initWidth = this.checkedPCA.length > 8 ? this.checkedPCA.length * 100 : 800\n      var initHeight = this.checkedPCA.length > 8 ? this.checkedPCA.length * 100 : 800\n      // var initWidth = 800 + 40 * this.checkedPCA.length\n      // var initHeight = 800 + 40 * this.checkedPCA.length\n\n      var padding = {\n        left: 80,\n        top: 40,\n        right: 150,\n        bottom: 20\n      }\n\n      var width1 = initWidth - padding.left - padding.bottom\n      var height1 = initHeight - padding.top - padding.bottom\n\n      var arr = this.checkedPCA\n\n      var width2 = initWidth - padding.left - padding.bottom\n      var height2 = initHeight - padding.top - padding.bottom\n\n      // color 配色\n      var colorRandom = d3.scaleOrdinal(d3.schemeCategory20)\n\n      var svgG = d3.select(\".container\")\n        .append(\"svg\")\n        .attr(\"class\", \"d3svg\")\n        .attr(\"width\", width1)\n        .attr(\"height\", height1)\n        .style(\"padding-left\", padding.left)\n        .style(\"padding-right\", padding.right)\n        .style(\"padding-top\", padding.top)\n        .style(\"padding-bottom\", padding.bottom)\n\n      if (this.checkedPCA.length === 2) {\n        var width = width2\n        var height = height2\n        var svg = svgG.append('g').attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n        //  x轴文字\n        svg.append(\"text\")\n    \t\t\t\t\t.attr(\"x\", width / 2)\n    \t\t\t\t\t.attr(\"y\", -20)\n    \t\t\t\t\t.attr(\"dy\", \"-0.3em\")\n    \t\t\t\t\t.text(function(){\n                // return \"PC\" + self.checkedPCA[0] + \": \" + (self.percentVariance[self.checkedPCA[0] - 1] * 100).toFixed(0) + \"% \" + \"variance\";\n    \t\t\t\t\t\treturn \"PC\" + self.checkedPCA[0];\n    \t\t\t\t\t});\n        svg.append(\"text\")\n    \t\t\t\t\t.attr(\"x\", width / 2)\n    \t\t\t\t\t.attr(\"y\", -5)\n    \t\t\t\t\t.attr(\"dy\", \"-0.3em\")\n    \t\t\t\t\t.text(function(){\n                // return \"PC\" + self.checkedPCA[0] + \": \" + (self.percentVariance[self.checkedPCA[0] - 1] * 100).toFixed(0) + \"% \" + \"variance\";\n    \t\t\t\t\t\treturn \"(\" + (self.percentVariance[self.checkedPCA[0] - 1] * 100).toFixed(0) + \"%)\";\n    \t\t\t\t\t});\n        //  y轴文字\n        svg.append(\"text\")\n    \t\t\t\t\t.attr(\"x\", -60)\n    \t\t\t\t\t.attr(\"y\", height / 2)\n              .attr(\"dy\", \"-0.3em\")\n              .style('text-anchor', 'start')\n              // .attr('transform', 'rotate(-90' + ' ' + 200 + ' ' + '220)')\n    \t\t\t\t\t.text(function(){\n                // return \"PC\" + self.checkedPCA[1] + \": \" + (self.percentVariance[self.checkedPCA[1] - 1] * 100).toFixed(0) + \"% \" + \"variance\";\n                return \"PC\" + self.checkedPCA[1];\n    \t\t\t\t\t});\n          svg.append(\"text\")\n      \t\t\t\t\t.attr(\"x\", -60)\n      \t\t\t\t\t.attr(\"y\", height / 2 + 20)\n                .attr(\"dy\", \"-0.3em\")\n                .style('text-anchor', 'start')\n                // .attr('transform', 'rotate(-90' + ' ' + 200 + ' ' + '220)')\n      \t\t\t\t\t.text(function(){\n                  // return \"PC\" + self.checkedPCA[1] + \": \" + (self.percentVariance[self.checkedPCA[1] - 1] * 100).toFixed(0) + \"% \" + \"variance\";\n                  return \"(\" + (self.percentVariance[self.checkedPCA[1] - 1] * 100).toFixed(0) + \"%)\";\n      \t\t\t\t\t});\n        //y轴比例尺\n        var yScale = d3.scaleLinear().range([height, 0])\n          .domain([(d3.max([self.maxValue[self.checkedPCA[0] - 1], self.maxValue[self.checkedPCA[1] - 1]])) + 2, (d3.min([self.minValue[self.checkedPCA[0] - 1], self.minValue[self.checkedPCA[1] - 1]])) - 2])\n        //定义y轴\n        var yAxis = d3.axisLeft(yScale).ticks(3)\n        //添加y轴\n        var yaxisg = svg.append(\"g\")\n          .attr(\"class\", \"yaxis\")\n          .attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \")\")\n          .call(yAxis)\n          .style(\"font-size\", \"14px\")\n        //x轴比例尺\n        var xScale = d3.scaleLinear().range([0, width])\n          .domain([(d3.min([self.minValue[self.checkedPCA[0] - 1], self.minValue[self.checkedPCA[1] - 1]])) - 2, (d3.max([self.maxValue[self.checkedPCA[0] - 1], self.maxValue[self.checkedPCA[1] - 1]])) + 2])\n        //定义x轴\n        var xAxis = d3.axisBottom(xScale).ticks(3)\n        //添加x轴\n        var xaxisg = svg.append(\"g\")\n          .attr(\"class\", \"xaxis\")\n          .attr(\"transform\", \"translate(\" + \"0 ,\" + height + \")\")\n          .call(xAxis)\n          .style(\"font-size\", \"14px\")\n        // d3.selectAll('.domain').remove() // 删除多余的两端刻度线\n        //添加网格-----------\n        // gridlines in x axis function\n        function make_x_gridlines() {\n          return d3.axisBottom(xScale)\n            .ticks(3)\n        }\n\n        // gridlines in y axis function\n        function make_y_gridlines() {\n          return d3.axisLeft(yScale)\n            .ticks(3)\n        }\n\n        // add the X gridlines\n        svg.append(\"g\")\n          .attr(\"class\", \"grid\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(make_x_gridlines()\n            .tickSize(-height)\n            .tickFormat(\"\")\n          )\n\n        // add the Y gridlines\n        svg.append(\"g\")\n          .attr(\"class\", \"grid\")\n          .call(make_y_gridlines()\n            .tickSize(-width)\n            .tickFormat(\"\")\n          )\n        // color 配色\n        var colorRandom = d3.scaleOrdinal(d3.schemeCategory20)\n        //添加circle包裹层，有几种类型添加几个\n        var cover = svg.append(\"g\")\n\n        //添加circle\n        cover.selectAll(\"circle\")\n          .data(self.tableValue)\n          .enter()\n          .append(\"circle\")\n          .attr(\"cx\", function(d, i) {\n            return xScale(d['value'][self.checkedPCA[0] - 1])\n          })\n          .attr(\"cy\", function(d, i) {\n            return yScale(d['value'][self.checkedPCA[1] - 1])\n          })\n          .attr(\"r\", function(d) {\n            return 6\n          })\n          .attr(\"fill\", function(d) {\n            return colorRandom(colorRandom(self.nameSampleMap[d['name']]['condition']))\n          })\n          .on(\"mouseover\", function(d) {\n            d3.select(this)\n              // .attr(\"r\", d3.select(this).attr(\"r\") * 1.6)\n            showtext.attr(\"x\", function() {\n                return xScale(d['value'][self.checkedPCA[0] - 1])\n              })\n              .attr(\"y\", function() {\n                return yScale(d['value'][self.checkedPCA[1] - 1]) - d3.select(this).attr(\"r\") * 1.6 - 20\n              })\n              .text(function() {\n                return d.name\n              })\n              .attr(\"text-anchor\", \"middle\")\n          })\n          .on(\"mouseout\", function() {\n            d3.select(this)\n              // .attr(\"r\", d3.select(this).attr(\"r\") / 1.6)\n            showtext.text(\"\")\n          })\n\n        //添加左侧提示部分包裹层\n        let detail = cover.append(\"g\")\n        let showtext = svg.append(\"text\")\n          .text(\"\")\n          .attr(\"font-size\", '14px')\n\n      } else {\n        var width = width2 / self.checkedPCA.length\n        var height = height2 / self.checkedPCA.length\n        for (let i = 0; i < arr.length; i++) {\n          for (let j = 0; j < arr.length; j++) {\n            var svg = svgG.append('g').attr('transform', 'translate(' + (j * (width) + (0)) + ',' + (i * (height) + (0)) + ')')\n            // var svg = svgG.append('g').attr('transform','translate('+ (j * (width) + (j* 10))  +','+ (i * (height) + (i* 10)) +')')\n            //y轴比例尺\n            var yScale = d3.scaleLinear().range([height, 0])\n              .domain([(d3.max([self.maxValue[arr[j] - 1], self.maxValue[arr[i] - 1]])) + 2, (d3.min([self.minValue[arr[j] - 1], self.minValue[arr[i] - 1]])) - 2])\n            //定义y轴\n            var yAxis = d3.axisLeft(yScale).ticks(arr.length > 2 ? 0 : 3)\n            //添加y轴\n            var yaxisg = svg.append(\"g\")\n              .attr(\"class\", \"yaxis\")\n              .attr(\"transform\", \"translate(\" + 0 + \",\" + 0 + \")\")\n              .call(yAxis)\n              .style(\"font-size\", \"14px\")\n            //x轴比例尺\n            var xScale = d3.scaleLinear().range([0, width])\n              .domain([(d3.min([self.minValue[arr[j] - 1], self.minValue[arr[i] - 1]])) - 2, (d3.max([self.maxValue[arr[j] - 1], self.maxValue[arr[i] - 1]])) + 2])\n            //定义x轴\n            var xAxis = d3.axisBottom(xScale).ticks(arr.length > 2 ? 0 : 3)\n            //添加x轴\n            var xaxisg = svg.append(\"g\")\n              .attr(\"class\", \"xaxis\")\n              .attr(\"transform\", \"translate(\" + \"0 ,\" + height + \")\")\n              .call(xAxis)\n              .style(\"font-size\", \"14px\")\n            // d3.selectAll('.domain').remove() // 删除多余的两端刻度线\n            //添加网格-----------\n            // gridlines in x axis function\n            function make_x_gridlines() {\n              return d3.axisBottom(xScale)\n                .ticks(3)\n            }\n\n            // gridlines in y axis function\n            function make_y_gridlines() {\n              return d3.axisLeft(yScale)\n                .ticks(3)\n            }\n\n            // add the X gridlines\n            svg.append(\"g\")\n              .attr(\"class\", \"grid\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(make_x_gridlines()\n                .tickSize(-height)\n                .tickFormat(\"\")\n              )\n\n            // add the Y gridlines\n            svg.append(\"g\")\n              .attr(\"class\", \"grid\")\n              .call(make_y_gridlines()\n                .tickSize(-width)\n                .tickFormat(\"\")\n              )\n            //添加circle包裹层，有几种类型添加几个\n            var cover = svg.append(\"g\")\n\n            //添加circle\n            cover.selectAll(\"circle\")\n              .data(self.tableValue)\n              .enter()\n              .append(\"circle\")\n              .attr(\"cx\", function(d) {\n                return xScale(d['value'][arr[j] - 1])\n              })\n              .attr(\"cy\", function(d) {\n                return yScale(d['value'][arr[i] - 1])\n              })\n              .attr(\"r\", function(d) {\n                return self.checkedPCA.length > 6 ? 2 : 10 / (arr.length - 1)\n              })\n              .attr(\"fill\", function(d) {\n                return colorRandom(self.nameSampleMap[d['name']]['condition'])\n              })\n              .on(\"mouseover\", function(d) {\n                d3.select(this)\n                  // .attr(\"r\", d3.select(this).attr(\"r\") * 1.6)\n                showtext.attr(\"x\", function() {\n                    return xScale(0)\n                  })\n                  .attr(\"y\", function() {\n                    return yScale(0)\n                  })\n                  .text(function() {\n                    return d.name\n                  })\n                  .attr(\"text-anchor\", \"middle\")\n              })\n              .on(\"mouseout\", function() {\n                d3.select(this)\n                  // .attr(\"r\", d3.select(this).attr(\"r\") / 1.6)\n                showtext.text(\"\")\n              })\n\n            //添加左侧提示部分包裹层\n            let detail = cover.append(\"g\")\n            let showtext = svg.append(\"text\")\n              .text(\"\")\n              .attr(\"font-size\", '14px')\n\n          }\n          //  x轴文字\n          svgG.append(\"text\")\n      \t\t\t\t\t.attr(\"x\", (width / 2.5) + (i * width))\n      \t\t\t\t\t.attr(\"y\", -15)\n      \t\t\t\t\t.attr(\"dy\", \"-0.3em\")\n      \t\t\t\t\t.text(function(){\n      \t\t\t\t\t\treturn \"PC\" + self.checkedPCA[i];\n      \t\t\t\t\t});\n          svgG.append(\"text\")\n      \t\t\t\t\t.attr(\"x\", (width / 2.5) + (i * width))\n      \t\t\t\t\t.attr(\"y\", -2)\n      \t\t\t\t\t.attr(\"dy\", \"-0.3em\")\n      \t\t\t\t\t.text(function(){\n      \t\t\t\t\t\treturn \"(\" + (self.percentVariance[self.checkedPCA[i] - 1] * 100).toFixed(0) + \"%\" + \")\";\n      \t\t\t\t\t});\n          //  y轴文字\n          svgG.append(\"text\")\n      \t\t\t\t\t.attr(\"x\", -60)\n      \t\t\t\t\t.attr(\"y\", height / 2 + (i * height))\n                .attr(\"dy\", \"-0.3em\")\n                .style('text-anchor', 'start')\n                // .attr('transform', 'rotate(-90' + ' ' + 50 * (i+1) + ' ' + 80 * (i+1) +')')\n      \t\t\t\t\t.text(function(){\n                  return \"PC\" + self.checkedPCA[i];\n      \t\t\t\t\t});\n          svgG.append(\"text\")\n      \t\t\t\t\t.attr(\"x\", -60)\n      \t\t\t\t\t.attr(\"y\", height / 2 + 20 + (i * height))\n                .attr(\"dy\", \"-0.3em\")\n                .style('text-anchor', 'start')\n                // .attr('transform', 'rotate(-90' + ' ' + 50 * (i+1) + ' ' + 80 * (i+1) +')')\n      \t\t\t\t\t.text(function(){\n                  return \"(\" + (self.percentVariance[self.checkedPCA[i] - 1] * 100).toFixed(0) + \"%\" + \")\";\n      \t\t\t\t\t});\n        }\n      }\n\n\n      //  去掉多余的 path class='domain'\n      d3.selectAll(\".xaxis .domain\").remove();\n      d3.selectAll(\".yaxis .domain\").remove();\n\n      //  右侧颜色图例\n      svgG.append(\"text\")\n        .attr(\"x\", width1 + 10)\n        .attr(\"y\", 120)\n        .attr(\"dy\", \"-0.3em\")\n        .text(function() {\n          return \"group\";\n        });\n      for (let i = 0; i < self.conditionArr.length; i++) {\n        svgG.append(\"rect\")\n          .attr(\"x\", width1 + 10) // rect 横坐标无需改动\n          .attr(\"y\", 130 + 30 * i)\n          .attr(\"width\", 30)\n          .attr(\"height\", 30)\n          .attr(\"fill\", \"white\")\n          .attr(\"stroke\", \"#999\")\n        svgG.append(\"circle\")\n          .attr(\"cx\", width1 + 10 + 15) // 圆心x坐标无需改动\n          .attr(\"cy\", (130 + 30 * i) + 15)\n          .attr(\"r\", 8)\n          .attr(\"fill\", colorRandom(self.conditionArr[i]))\n        svgG.append(\"text\")\n          .attr(\"x\", width1 + 10 + 40) // text x坐标无需改动\n          .attr(\"y\", 155 + 30 * i)\n          .attr(\"dy\", \"-0.3em\")\n          .text(self.conditionArr[i]);\n      }\n    },\n\n\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.content {\n  float: left;\n  /* width: 60%; */\n  width: calc(100% - 350px);\n  padding: 0 20px;\n  margin: 19px auto;\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.el-checkbox+.el-checkbox {\n  margin-left: 0 !important;\n}\n</style>\n<style media=\"screen\">\n.grid .tick line {\n  stroke: #cccccc4d;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/plotPCA.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticStyle:{\"height\":\"calc(100% - 62px)\",\"margin-top\":\"2px\"}},[_c('el-aside',{staticStyle:{\"width\":\"300px\",\"height\":\"100%\",\"border-right\":\"1px solid #e6e6e6\"},attrs:{\"width\":\"350px;\"}},[_c('leftMenu',{staticStyle:{\"margin-top\":\"5px\"}})],1),_vm._v(\" \"),_c('el-main',[_c('div',{},[_c('el-breadcrumb',{staticStyle:{\"margin\":\"5px 0 50px 0\"},attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: 'report' }}},[_vm._v(\"项目 \"+_vm._s(_vm.$store.state.projectName))]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"PCA 主成分分析\")])],1),_vm._v(\" \"),_c('h2',[_vm._v(\"PCA 主成分分析\")]),_vm._v(\" \"),_c('el-checkbox-group',{on:{\"change\":_vm.handlecheckedPCAChange},model:{value:(_vm.checkedPCA),callback:function ($$v) {_vm.checkedPCA=$$v},expression:\"checkedPCA\"}},_vm._l((_vm.checkboxValue),function(pca){return _c('el-checkbox',{key:pca,staticStyle:{\"width\":\"20%\"},attrs:{\"label\":pca}},[_vm._v(\"PC\"+_vm._s(pca))])})),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.initD3()}}},[_vm._v(\"确定\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){_vm.clearChecked()}}},[_vm._v(\"清空\")]),_vm._v(\" \"),_c('div',{staticClass:\"container\"})],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-218259ee\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/plotPCA.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-218259ee\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./plotPCA.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-218259ee\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./plotPCA.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./plotPCA.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./plotPCA.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-218259ee\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./plotPCA.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-218259ee\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/plotPCA.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}