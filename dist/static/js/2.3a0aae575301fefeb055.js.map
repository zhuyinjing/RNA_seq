{"version":3,"sources":["webpack:///./src/components/heatmapComp.vue?39c1","webpack:///./src/components/heatmapComp.vue","webpack:///src/components/heatmap.vue","webpack:///./src/components/heatmap.vue?17f6","webpack:///./src/components/heatmap.vue","webpack:///src/components/heatmapComp.vue"],"names":["components_heatmapComp","render","this","$createElement","_self","_c","_m","staticRenderFns","_h","staticStyle","display","float","width","attrs","id","_v","staticClass","class","clear","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","heatmapComp","__webpack_exports__","data","components","leftMenu","degComp","imgMenuShowComp","[object Object]","methods","components_heatmap","_vm","height","margin-top","directives","name","rawName","value","$store","state","expression","border-right","href","target","heatmap","watch","$route","heatmapJson","heatmap_json_string","JSON","parse","initchart","stages","json","genes","window","boxplot","__WEBPACK_IMPORTED_MODULE_1_highcharts_highstock___default","a","Chart","chart","renderTo","type","length","credits","enabled","title","text","legend","exporting","xAxis","categories","yAxis","plotOptions","color","fillColor","lineWidth","medianColor","medianWidth","stemColor","stemDashStyle","stemWidth","whiskerColor","whiskerLength","whiskerWidth","series","target_element","$","offset","min_y","top","microarrays_element","left","dendrogram","InCHlib","metadata","column_metadata","min_row_height","max_column_width","max_height","heatmap_colors","metadata_colors","column_dendrogram","max_percentile","min_percentile","independent_columns","heatmap_part_width","current","current_objects","current_columns","draw_boxplot","object_ids","column_ids","y","header","j","push","hide","class2values","m","i","values","row_id","key","max_y","footer_height","features","css","objects2leaves","nodes","setTitle","objects","remove","seriesData","idx","get_boxplot_parameters","addSeries","show","array","min","max","median","lower_q","upper_q","sort","b","array_length","median_index","_hack_round","quarter","add_color_scale","start","r","g","middle","end","events","row_onclick","evt","pageY","highlight_rows","unhighlight_cluster","dendrogram_node_onclick","node_id","column_dendrogram_node_highlight","column_dendrogram_node_unhighlight","on_zoom","empty_space_onclick","read_data","draw"],"mappings":"yFAGAA,GADiBC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAaC,EAAbN,KAAaC,eAA0BE,EAAvCH,KAAuCE,MAAAC,IAAAG,EAAwB,OAAAH,EAAA,UAAkBA,EAAA,OAAYI,aAAaC,QAAA,UAAkBL,EAAA,OAAYI,aAAaE,MAAA,OAAAC,MAAA,WAAgCP,EAAA,OAAYQ,OAAOC,GAAA,8BAAxMZ,KAAuOa,GAAA,KAAAV,EAAA,OAA0BW,YAAA,iBAAAP,aAA0CE,MAAA,OAAAC,MAAA,SAA+BC,OAAQI,MAAA,oBAA0BZ,EAAA,OAAYQ,OAAOC,GAAA,iBAA/XZ,KAA+Ya,GAAA,KAAAV,EAAA,OAA4BI,aAAaS,MAAA,eCG5d,IASAC,EAbA,SAAAC,GACAC,EAAA,QACAA,EAAA,SAgBAC,EAdAD,EAAA,OAcAE,CACAC,EAAA,EACAxB,GATA,EAWAmB,EAPA,kBAEA,MAUAM,EAAA,EAAAH,EAAA,wKCIAI,KAAA,SAIAC,YACAC,WAAA,EACAC,UAAA,EACAC,kBAAA,EACAN,cAAA,GAEAO,YAEAC,YCxCAC,GADiBhC,OAFjB,WAA0B,IAAAiC,EAAAhC,KAAaM,EAAA0B,EAAA/B,eAA0BE,EAAA6B,EAAA9B,MAAAC,IAAAG,EAAwB,OAAAH,EAAA,gBAA0BI,aAAa0B,OAAA,oBAAAC,aAAA,SAAiD/B,EAAA,YAAiBgC,aAAaC,KAAA,OAAAC,QAAA,SAAAC,MAAAN,EAAAO,OAAAC,MAAA,SAAAC,WAAA,0BAAkGlC,aAAeG,MAAA,QAAAuB,OAAA,OAAAS,eAAA,qBAAmE/B,OAAQD,MAAA,YAAkBP,EAAA,YAAiBI,aAAa2B,aAAA,UAAoB,GAAAF,EAAAnB,GAAA,KAAAV,EAAA,WAAAA,EAAA,mBAAA6B,EAAAnB,GAAA,KAAAV,EAAA,WAAA6B,EAAAnB,GAAA,KAAAV,EAAA,UAAuGA,EAAA,OAAYW,YAAA,cAAwBX,EAAA,KAAA6B,EAAAnB,GAAA,+VAAAmB,EAAAnB,GAAA,KAAAV,EAAA,KAAA6B,EAAAnB,GAAA,6KAAAV,EAAA,KAAgkBQ,OAAOgC,KAAA,yCAAAC,OAAA,YAAmEZ,EAAAnB,GAAA,UAAAmB,EAAAnB,GAAA,QAAAmB,EAAAnB,GAAA,KAAAV,EAAA,8BAEntCE,oBCCjB,IAcAe,EAdAD,EAAA,OAcAE,CACAwB,EACAd,GATA,EAVA,SAAAb,GACAC,EAAA,SAaA,kBAEA,MAUAI,EAAA,QAAAH,EAAA,2HCRAG,EAAA,GACAC,KAAA,MAEAS,OAAA,IAGAR,cAEAqB,OACAC,OAAA,gBAEAlB,UACA7B,KAAAuC,OAAAC,MAAAQ,YAAAC,oBAAAC,KAAAC,MAAAnD,KAAAuC,OAAAC,MAAAQ,YAAAC,sBAEApB,UACA7B,KAAAoD,aAEAtB,SACAD,eACA7B,KAAAuC,OAAAC,MAAAQ,YAAAC,oBAAAC,KAAAC,MAAAnD,KAAAuC,OAAAC,MAAAQ,YAAAC,qBACAjD,KAAAoD,aAEAvB,YACA,IAAAwB,EAAArD,KAAAuC,OAAAC,MAAAQ,YAAAK,OAEAC,GADAtD,KAAAuC,OAAAC,MAAAQ,YAAAO,MACAvD,KAAAuC,OAAAC,MAAAQ,YAAAC,qBACAO,OAAAC,QAAA,IAAAC,EAAAC,EAAAC,OACAC,OACAC,SAAA,UACAC,KAAA,UACA9B,OAAA,IACAvB,MAAA2C,EAAAW,OAAA,MAAAX,EAAAW,OAAA,KAEAC,SACAC,SAAA,GAEAC,OACAC,KAAA,WAGAC,QACAH,SAAA,GAGAI,WACAJ,SAAA,GAGAK,OACAC,WAAAnB,EACAc,OACAC,KAAA,iBAIAK,OACAN,OACAC,KAAA,SAIAM,aACAjB,SACAkB,MAAA,UACAC,UAAA,UACAC,UAAA,EACAC,YAAA,UACAC,YAAA,EACAC,UAAA,UACAC,cAAA,MACAC,UAAA,EACAC,aAAA,UACAC,cAAA,MACAC,aAAA,IAIAC,SACAlD,KAAA,OACAZ,YAMA,IAAA+D,EAAAC,EAAA,2BACAC,EAAAF,EAAAE,SACAC,EAAAD,EAAAE,IAAA,IAEAC,GADAH,EAAAI,KACAL,EAAA,iBAEAhC,OAAAsC,WAAA,IAAAC,SACAnD,OAAA,yBACAoD,UAAA,EACAC,iBAAA,EACAC,eAAA,EACAC,iBAAA,GACAC,WAAA,EACAC,eAAA,SACAC,gBAAA,SACAC,mBAAA,EACAC,eAAA,GAEAC,eAAA,GACAC,qBAAA,EACAC,mBAAA,GACAjG,MAAA,MAGA,IAAAkG,EAAA,KACAC,KACAC,KAkDA,SAAAC,EAAAC,EAAAC,EAAAC,GACAJ,EAAAG,EACA,IAAAE,EAAArB,WAAAqB,OACA,OAAAL,EAAA9C,OACA,IAAAoD,EAAA,EAAAA,EAAAD,EAAAnD,OAAAoD,IACAN,EAAAO,KAAAD,GAIAxB,EAAA0B,OAEA,IADA,IAAAC,KACAC,EAAA,EAAAA,EAAAnE,EAAAW,SAAAwD,EACAD,EAAAlE,EAAAmE,OAGA,IACAC,EAAAL,EAAAM,EAAAC,EAAAC,EADAC,EAAAnC,EAAAH,EAAAtD,SAAA6D,WAAAgC,cAGA7B,EAAAH,WAAAG,gBAAA8B,SAAA,GAQA,IAJAb,GADAA,IAFA,IAEAW,IAFA,IAEAX,EAAA,KACAxB,IAAAwB,EAEAtB,EAAAoC,KAAArC,IAAAuB,IAEAO,EAAA,EAAAA,EAAAT,EAAAhD,OAAAyD,IAIA,IAHAE,EAAA7B,WAAAmC,eAAAjB,EAAAS,IACAC,EAAA5B,WAAAtE,KAAA0G,MAAAP,GAAAI,SACAtE,QAAA0E,UAAA/D,KAAA0B,WAAAtE,KAAA0G,MAAAP,GAAAS,QAAA,KACAhB,EAAA,EAAAA,EAAAN,EAAA9C,OAAAoD,IAEAG,EAAAtB,EADA2B,EAAAd,EAAAM,KACAC,KAAAK,EAAAE,IAQA,IAJAZ,EAAAhD,OAAA,GACAP,QAAA0E,UAAA/D,KAAA,SAGAX,QAAA6B,OAAAtB,OAAA,GACAP,QAAA6B,OAAA,GAAA+C,QAAA,GAIA,IADA,IAAAC,KACAC,EAAA,EAAAA,EAAAlF,EAAAW,SAAAuE,EACAhB,EAAAlE,EAAAkF,KAAAhB,EAAAlE,EAAAkF,IAAAvE,OACAsE,EAAAjB,KAAAmB,EAAAjB,EAAAlE,EAAAkF,MAEAD,EAAAjB,MAAA,YAGA5D,QAAAgF,WAAAjH,KAAA8G,EAAAlG,KAAA,sBACAwD,EAAA8C,OAGA,SAAAF,EAAAG,GACA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAL,EAAAM,KAAA,SAAAtF,EAAAuF,GAAA,OAAAvF,EAAAuF,IACA,IAAAC,EAAAR,EAAA3E,OACA4E,EAAAD,EAAA,GACAE,EAAAF,EAAAQ,EAAA,GACA,IAAAC,EAAAtD,WAAAuD,YAAAF,EAAA,GACAG,EAAAxD,WAAAuD,YAAAF,EAAA,GAQA,OAPAL,EAAAH,EAAAS,GACAL,EAAAJ,EAAAS,EAAAE,GACAN,EAAAL,EAAAS,EAAAE,GACAX,EAAA3E,OAAA,IACAgF,EAAAH,IAEAD,EAAAG,EAAAD,EAAAE,EAAAH,GAvHA/C,WAAAyD,gBAAA,UACAC,OAAAC,EAAA,GAAAC,EAAA,IAAAR,EAAA,IACAS,QAAAF,EAAA,EAAAC,EAAA,EAAAR,EAAA,GACAU,KAAAH,EAAA,IAAAC,EAAA,GAAAR,EAAA,MAGApD,WAAA+D,OAAAC,YAAA,SAAA9C,EAAA+C,GACAnD,EAAAI,EAAA,GAEAD,EADAF,EAAAG,EACAF,EAAAiD,EAAAC,OACAlE,WAAAmE,eAAApD,GACAf,WAAAoE,uBAGApE,WAAA+D,OAAAM,wBAAA,SAAAnD,EAAAoD,EAAAL,GAGA,IAAAtC,EACA,IAFAV,EADAF,EAAAG,EACAF,EAAAiD,EAAAC,OAEAvC,EAAA,EAAAA,EAAAT,EAAAhD,OAAAyD,IACA,GAAAT,EAAAS,IAAAb,EACA,OAGAd,WAAAmE,oBAGAnE,WAAA+D,OAAAQ,iCAAA,SAAApD,EAAAmD,GACArD,EAAAF,EAAAI,EAAA,IAGAnB,WAAA+D,OAAAS,mCAAA,WAEAvD,EAAAF,EADAC,KACA,IAGAhB,WAAA+D,OAAAU,QAAA,SAAAH,GACAxE,EAAAoC,KAAArC,IAAAD,KAGAI,WAAA+D,OAAAW,oBAAA,WACA1E,WAAAmE,oBAIAnE,WAAA2E,UAAAnH,GACAwC,WAAA4E,OACA3D,EAAAF,EAAAC,EAAApB,GACAI,WAAAmE,eAAApD","file":"static/js/2.3a0aae575301fefeb055.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('div',{staticStyle:{\"float\":\"left\",\"width\":\"900px\"}},[_c('div',{attrs:{\"id\":\"microarrays_dendrogram\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"margin-top-200\",staticStyle:{\"float\":\"left\",\"width\":\"800px\"},attrs:{\"class\":\"margin-top-200\"}},[_c('div',{attrs:{\"id\":\"boxplot\"}})])]),_vm._v(\" \"),_c('div',{staticStyle:{\"clear\":\"both\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b4929c24\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/heatmapComp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4929c24\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./heatmapComp.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4929c24\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./heatmapComp.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmapComp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmapComp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b4929c24\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./heatmapComp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b4929c24\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/heatmapComp.vue\n// module id = null\n// module chunks = ","<template>\n  <el-container style=\"height:calc(100% - 62px);margin-top:2px\">\n    <el-aside v-show=\"$store.state.menuShow\" width=\"350px;\" style=\"width:300px;height:100%;border-right:1px solid #e6e6e6\">\n      <leftMenu style=\"margin-top:5px\"></leftMenu>\n    </el-aside>\n    <el-main>\n      <imgMenuShowComp></imgMenuShowComp>\n\n      <degComp></degComp>\n\n      <div class=\"\">\n        <div class=\"container\">\n          <p>差异表达基因热图，可以通过颜色深浅来直观显示不同实验条件下基因表达的差异，并且可以较直观的显示出不同实验条件下调基因调控模式（表达谱）的差异。默认的配色方案为绿色代表较低的表达水平，红色代表较高的表达水平，黑色代表中间表达水平。用户可以点击左上角的色条更改配色方案。HeatMap 左侧的树状结构表示基因聚类的结果，表达趋势越接近的基因，在树状结构图中的位置也更接近。HeatMap 上方的树状结构图表示样本聚类的结果，基因表达模式更接近的样本，在数据结构图中的位置更接近。HeatMap 的输入数据为样本间差异表达基因列表中前 100 个基因的 TPM 值，基因距离和样本距离的计算采用欧式距离，基因和样本间的 linkage 计算方法为 ward，使用工具为 Inchlib，参考文献:</p>\n          <p>Škuta, C., Bartůněk, P., Svozil, D. InCHlib – interactive cluster heatmap for web applications. Journal of Cheminformatics 2014, 6 (44), DOI: 10.1186/s13321-014-0044-4 [<a href=\"http://www.jcheminf.com/content/6/1/44\" target=\"_blank\">全文链接</a>]]</p>\n\n          <heatmapComp></heatmapComp>\n\n        </div>\n      </div>\n    </el-main>\n  </el-container>\n\n</template>\n\n<script>\nimport leftMenu from './leftMenu.vue'\nimport degComp from './degComp.vue'\nimport imgMenuShowComp from './imgMenuShowComp.vue'\nimport heatmapComp from './heatmapComp.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  components: {\n    leftMenu,\n    degComp,\n    imgMenuShowComp,\n    heatmapComp\n  },\n  mounted () {\n  },\n  methods: {\n  }\n}\n</script>\n<style scoped=\"true\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/heatmap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticStyle:{\"height\":\"calc(100% - 62px)\",\"margin-top\":\"2px\"}},[_c('el-aside',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$store.state.menuShow),expression:\"$store.state.menuShow\"}],staticStyle:{\"width\":\"300px\",\"height\":\"100%\",\"border-right\":\"1px solid #e6e6e6\"},attrs:{\"width\":\"350px;\"}},[_c('leftMenu',{staticStyle:{\"margin-top\":\"5px\"}})],1),_vm._v(\" \"),_c('el-main',[_c('imgMenuShowComp'),_vm._v(\" \"),_c('degComp'),_vm._v(\" \"),_c('div',{},[_c('div',{staticClass:\"container\"},[_c('p',[_vm._v(\"差异表达基因热图，可以通过颜色深浅来直观显示不同实验条件下基因表达的差异，并且可以较直观的显示出不同实验条件下调基因调控模式（表达谱）的差异。默认的配色方案为绿色代表较低的表达水平，红色代表较高的表达水平，黑色代表中间表达水平。用户可以点击左上角的色条更改配色方案。HeatMap 左侧的树状结构表示基因聚类的结果，表达趋势越接近的基因，在树状结构图中的位置也更接近。HeatMap 上方的树状结构图表示样本聚类的结果，基因表达模式更接近的样本，在数据结构图中的位置更接近。HeatMap 的输入数据为样本间差异表达基因列表中前 100 个基因的 TPM 值，基因距离和样本距离的计算采用欧式距离，基因和样本间的 linkage 计算方法为 ward，使用工具为 Inchlib，参考文献:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Škuta, C., Bartůněk, P., Svozil, D. InCHlib – interactive cluster heatmap for web applications. Journal of Cheminformatics 2014, 6 (44), DOI: 10.1186/s13321-014-0044-4 [\"),_c('a',{attrs:{\"href\":\"http://www.jcheminf.com/content/6/1/44\",\"target\":\"_blank\"}},[_vm._v(\"全文链接\")]),_vm._v(\"]]\")]),_vm._v(\" \"),_c('heatmapComp')],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6a1b7437\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/heatmap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6a1b7437\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./heatmap.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./heatmap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6a1b7437\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./heatmap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6a1b7437\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/heatmap.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"\">\n    <div class=\"\" style=\"display:flex\">\n      <div class=\"\" style=\"float:left;width:900px;\">\n        <div id=\"microarrays_dendrogram\" class=\"\"></div>\n      </div>\n      <div class=\"\" style=\"float:left;width:800px;\" class=\"margin-top-200\">\n        <div id=\"boxplot\"></div>\n      </div>\n    </div>\n    <div style=\"clear:both\"></div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport Highcharts from 'highcharts/highstock';\n\nexport default {\n  data () {\n    return {\n      height: 5,\n    }\n  },\n  components: {\n  },\n  watch: {\n    '$route': 'routerChange'\n  },\n  created () {\n    this.$store.state.heatmapJson.heatmap_json_string = JSON.parse(this.$store.state.heatmapJson.heatmap_json_string)\n  },\n  mounted () {\n    this.initchart()\n  },\n  methods: {\n    routerChange () {\n      this.$store.state.heatmapJson.heatmap_json_string = JSON.parse(this.$store.state.heatmapJson.heatmap_json_string)\n      this.initchart()\n    },\n    initchart () {\n      let stages = this.$store.state.heatmapJson.stages\n      let genes = this.$store.state.heatmapJson.genes\n      let json = this.$store.state.heatmapJson.heatmap_json_string\n      window.boxplot = new Highcharts.Chart({\n                  chart: {\n                      renderTo: \"boxplot\",\n                      type: 'boxplot',\n                      height: 400,\n                      width: stages.length > 10 ? stages.length * 30 : 400,\n                  },\n                  credits: {\n                    enabled: false //不显示LOGO\n                  },\n                  title: {\n                      text: \"当前基因表达量\"\n                  },\n\n                  legend: {\n                      enabled: false\n                  },\n\n                  exporting:{\n                      enabled: false\n                  },\n\n                  xAxis: {\n                      categories: stages,\n                      title: {\n                          text: 'Sample Types'\n                      }\n                  },\n\n                  yAxis: {\n                      title: {\n                          text: 'TPMs'\n                      }\n                  },\n\n                  plotOptions: {\n                      boxplot: {\n                          color: \"#000000\",\n                              fillColor: '#F0F0E0',\n                              lineWidth: 2,\n                              medianColor: '#0C5DA5',\n                              medianWidth: 3,\n                              stemColor: '#A63400',\n                              stemDashStyle: 'dot',\n                              stemWidth: 1,\n                              whiskerColor: '#3D9200',\n                              whiskerLength: '20%',\n                              whiskerWidth: 3\n                      }\n                  },\n\n                  series: [{\n                      name: 'TPMs',\n                      data: [\n                      ]\n                  }\n                  ]\n              });\n\n              var target_element = $(\"#microarrays_dendrogram\");\n              var offset = target_element.offset();\n              var min_y = offset.top + 100;\n              var x_pos = offset.left;\n              var microarrays_element = $(\"#microarrays\");\n              //microarrays_element.css({\"left\": x_pos + target_element.width()-50, \"top\": min_y, \"z-index\": 100});\n              window.dendrogram = new InCHlib({ //instantiate InCHlib\n                      target: \"microarrays_dendrogram\", //ID of a target HTML element\n                      metadata: true, //turn on the metadata\n                      column_metadata: true, //turn on the column metadata\n                      min_row_height:5,\n                      max_column_width:50,\n                      max_height: 5, //set maximum height of visualization in pixels\n                      heatmap_colors: \"GrBkRd\", //set color scale for clustered data\n                      metadata_colors: \"RdLrBu\", //set color scale for metadata\n                      column_dendrogram: true,\n                      max_percentile: 90,\n                      // middle_percentile: 50,\n                      min_percentile: 10,\n                      independent_columns: false,\n                      heatmap_part_width: 0.7,  // 每一个小格的宽度\n                      width: 900,\n                      // min_row_width: json.column_metadata.features[0].length * 5,\n              });\n              var current = null;\n              var current_objects = [];// dendrogram.data.nodes[0].objects;\n              var current_columns = [];\n              dendrogram.add_color_scale(\"GrBkRd\",\n                \t\t\t\t{\"start\": {\"r\":35, \"g\": 139, \"b\": 69},\n                \t\t\t\t\"middle\": {\"r\": 0, \"g\": 0, \"b\": 0},\n                \t\t\t\t\"end\": {\"r\": 215, \"g\": 25, \"b\": 28}\n                \t\t\t\t})\n\n              dendrogram.events.row_onclick = function(object_ids, evt){\n                  current = object_ids[0];\n                  current_objects = object_ids;\n                  draw_boxplot(current_objects, current_columns, evt.pageY);\n                  dendrogram.highlight_rows(current_objects);\n                  dendrogram.unhighlight_cluster();\n              };\n\n              dendrogram.events.dendrogram_node_onclick = function(object_ids, node_id, evt){\n                  current_objects = object_ids;\n                  draw_boxplot(current_objects, current_columns, evt.pageY);\n                  var i;\n                  for(i = 0; i<object_ids.length; i++){\n                      if(object_ids[i] == current){\n                          return;\n                      }\n                  }\n                  dendrogram.highlight_rows([]);\n              };\n\n              dendrogram.events.column_dendrogram_node_highlight = function(column_ids, node_id){\n                  draw_boxplot(current_objects, column_ids, 0);\n              };\n\n              dendrogram.events.column_dendrogram_node_unhighlight = function(){\n                  current_columns = [];\n                  draw_boxplot(current_objects, current_columns, 0);\n              };\n\n              dendrogram.events.on_zoom = function(node_id){\n                  microarrays_element.css({\"top\": min_y});\n              };\n\n              dendrogram.events.empty_space_onclick = function(){\n                  dendrogram.highlight_rows([]);\n                  //microarrays_element.hide();\n              };\n\n              dendrogram.read_data(json); //read input json file\n              dendrogram.draw(); //draw cluster heatmap\n              draw_boxplot(current_objects, current_columns, min_y);\n              dendrogram.highlight_rows(current_objects);\n\n              function draw_boxplot(object_ids, column_ids, y){\n                  current_columns = column_ids;\n                  var header = dendrogram.header;\n                  if(current_columns.length === 0){\n                      for(j = 0; j<header.length; j++){\n                          current_columns.push(j);\n                      }\n                  }\n\n                  microarrays_element.hide();\n                  var class2values = {};\n                  for (var m = 0; m < stages.length; ++ m) {\n                      class2values[stages[m]] = [];\n                  }\n\n                  var max_y = min_y + target_element.height() - dendrogram.footer_height;\n                  var i, j, values, row_id, key;\n                  //var header = dendrogram.header;\n                  var column_metadata = dendrogram.column_metadata.features[0];\n                  var boxplot_height = 400;\n\n                  y = (y + boxplot_height > max_y)?max_y - boxplot_height:y-100;\n                  y = (y < min_y)?min_y: y;\n\n                  microarrays_element.css({\"top\": y});\n\n                  for (i = 0; i < object_ids.length; i++) {\n                      row_id = dendrogram.objects2leaves[object_ids[i]];\n                      values = dendrogram.data.nodes[row_id].features;\n                      boxplot.setTitle({text: dendrogram.data.nodes[row_id].objects[0]});\n                      for (j = 0; j < current_columns.length; j++) {\n                          key = current_columns[j];\n                          class2values[column_metadata[key]].push(values[key]);\n                      }\n                  }\n\n                  if (object_ids.length > 1) {\n                      boxplot.setTitle({text: \"多个基因\"});\n                  }\n\n                  while(boxplot.series.length > 0){\n                      boxplot.series[0].remove(true);\n                  }\n\n                  var seriesData = [];\n                  for(var idx = 0; idx < stages.length; ++ idx) {\n                      if(class2values[stages[idx]] && class2values[stages[idx]].length) {\n                          seriesData.push(get_boxplot_parameters(class2values[stages[idx]]));\n                      } else {\n                          seriesData.push([0,0,0,0,0]);\n                      }\n                  }\n                  boxplot.addSeries({data:seriesData, name: \"Average Signal\"}, true);\n                  microarrays_element.show();\n              }\n\n              function get_boxplot_parameters(array){\n                  var min, max, median, lower_q, upper_q;\n                  array.sort(function(a,b){return a - b;});\n                  var array_length = array.length;\n                  min = array[0];\n                  max = array[array_length-1];\n                  var median_index = dendrogram._hack_round(array_length/2);\n                  var quarter = dendrogram._hack_round(array_length/4);\n                  median = array[median_index];\n                  lower_q = array[median_index-quarter];\n                  upper_q = array[median_index+quarter];\n                  if (array.length < 4) {\n                      upper_q = max;\n                  }\n                  var parameters = [min, lower_q, median, upper_q, max];\n                  return parameters;\n              }\n    },\n\n  }\n}\n</script>\n\n<style scoped=\"true\">\n.margin-top-200 {\n  margin-top: 200px;\n}\n</style>\n<style media=\"screen\">\n.color_scales {\n  z-index: 9 !important;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/heatmapComp.vue"],"sourceRoot":""}